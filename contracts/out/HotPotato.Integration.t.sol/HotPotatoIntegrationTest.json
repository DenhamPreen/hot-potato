{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "excludedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "artifact",
              "type": "string"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFullRoundForcedLossAndDistribution",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080604052600c8054600160ff199182168117909255601f8054909116909117905534801561002d57600080fd5b506166d78061003d6000396000f3fe60806040523480156200001157600080fd5b5060043610620000fd5760003560e01c8063916a17c61162000097578063ba414fa6116200006e578063ba414fa614620001bc578063d095712e14620001d7578063e20c9f7114620001e1578063fa7626d414620001eb57600080fd5b8063916a17c6146200018f578063b0464fdc14620001a8578063b5508aa914620001b257600080fd5b80633e5e3c2311620000d85780633e5e3c2314620001495780633f7286f4146200015357806366d9a9a0146200015d57806385226c81146200017657600080fd5b80630a9254e414620001025780631ed7831c146200010e5780632ade38801462000130575b600080fd5b6200010c620001f9565b005b620001186200066c565b60405162000127919062003437565b60405180910390f35b6200013a620006dd565b60405162000127919062003505565b6200011862000838565b62000118620008a7565b6200016762000916565b60405162000127919062003673565b6200018062000aa4565b6040516200012791906200371c565b6200019962000b7e565b604051620001279190620037a0565b6200019962000c8a565b6200018062000d96565b620001c662000e70565b604051901515815260200162000127565b6200010c62000f44565b6200011862001b92565b601f54620001c69060ff1681565b60006200023b6040518060400160405280600881526020017f6465706c6f79657200000000000000000000000000000000000000000000000081525062001c01565b90506200027d6040518060400160405280600781526020017f63726561746f720000000000000000000000000000000000000000000000000081525062001c01565b602060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620002fd6040518060400160405280600681526020017f6b6565706572000000000000000000000000000000000000000000000000000081525062001c01565b602180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9283161790556040517fc88a5e6d0000000000000000000000000000000000000000000000000000000081529082166004820152683635c9adc5dea000006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b158015620003b557600080fd5b505af1158015620003ca573d6000803e3d6000fd5b50506020546040517fc88a5e6d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116600482015260006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c88a5e6d9150604401600060405180830381600087803b1580156200045557600080fd5b505af11580156200046a573d6000803e3d6000fd5b50506021546040517fc88a5e6d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116600482015260006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c88a5e6d9150604401600060405180830381600087803b158015620004f557600080fd5b505af11580156200050a573d6000803e3d6000fd5b50506040517fca669fa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200058a57600080fd5b505af11580156200059f573d6000803e3d6000fd5b5050602054604051670de0b6b3a76400009350612ee092506113889173ffffffffffffffffffffffffffffffffffffffff1690620005dd9062003395565b9384526020840192909252604083015273ffffffffffffffffffffffffffffffffffffffff166060820152608001604051809103906000f08015801562000628573d6000803e3d6000fd5b50601f60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606016805480602002602001604051908101604052809291908181526020018280548015620006d357602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311620006a7575b5050505050905090565b6060601e805480602002602001604051908101604052809291908181526020016000905b828210156200082f576000848152602080822060408051808201825260028702909201805473ffffffffffffffffffffffffffffffffffffffff168352600181018054835181870281018701909452808452939591948681019491929084015b828210156200081757838290600052602060002001805462000783906200383e565b80601f0160208091040260200160405190810160405280929190818152602001828054620007b1906200383e565b8015620008025780601f10620007d65761010080835404028352916020019162000802565b820191906000526020600020905b815481529060010190602001808311620007e457829003601f168201915b50505050508152602001906001019062000761565b50505050815250508152602001906001019062000701565b50505050905090565b60606018805480602002602001604051908101604052809291908181526020018280548015620006d35760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311620006a7575050505050905090565b60606017805480602002602001604051908101604052809291908181526020018280548015620006d35760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311620006a7575050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156200082f578382906000526020600020906002020160405180604001604052908160008201805462000970906200383e565b80601f01602080910402602001604051908101604052809291908181526020018280546200099e906200383e565b8015620009ef5780601f10620009c357610100808354040283529160200191620009ef565b820191906000526020600020905b815481529060010190602001808311620009d157829003601f168201915b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801562000a8b57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841162000a375790505b505050505081525050815260200190600101906200093a565b6060601a805480602002602001604051908101604052809291908181526020016000905b828210156200082f57838290600052602060002001805462000aea906200383e565b80601f016020809104026020016040519081016040528092919081815260200182805462000b18906200383e565b801562000b695780601f1062000b3d5761010080835404028352916020019162000b69565b820191906000526020600020905b81548152906001019060200180831162000b4b57829003601f168201915b50505050508152602001906001019062000ac8565b6060601d805480602002602001604051908101604052809291908181526020016000905b828210156200082f57600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801562000c7157602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841162000c1d5790505b5050505050815250508152602001906001019062000ba2565b6060601c805480602002602001604051908101604052809291908181526020016000905b828210156200082f57600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801562000d7d57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841162000d295790505b5050505050815250508152602001906001019062000cae565b60606019805480602002602001604051908101604052809291908181526020016000905b828210156200082f57838290600052602060002001805462000ddc906200383e565b80601f016020809104026020016040519081016040528092919081815260200182805462000e0a906200383e565b801562000e5b5780601f1062000e2f5761010080835404028352916020019162000e5b565b820191906000526020600020905b81548152906001019060200180831162000e3d57829003601f168201915b50505050508152602001906001019062000dba565b60085460009060ff161562000e855750600190565b6040517f667f9d70000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d600482018190527f6661696c65640000000000000000000000000000000000000000000000000000602483015260009163667f9d7090604401602060405180830381865afa15801562000f17573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f3d919062003893565b1415905090565b6000601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639cbe5efd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000fb4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000fda919062003893565b604080516032808252610660820190925291925060009190602082016106408036833701905050905060005b60318110156200126c576040517f7000000000000000000000000000000000000000000000000000000000000000602082015260218101829052600090620010609060410160405160208183030381529060405262001c01565b905080838381518110620010785762001078620038dc565b73ffffffffffffffffffffffffffffffffffffffff92831660209182029290920101526040517fc88a5e6d0000000000000000000000000000000000000000000000000000000081529082166004820152678ac7230489e800006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b1580156200111157600080fd5b505af115801562001126573d6000803e3d6000fd5b50506040517fca669fa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b158015620011a657600080fd5b505af1158015620011bb573d6000803e3d6000fd5b50505050601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663159090bd670de0b6b3a76400006040518263ffffffff1660e01b81526004016000604051808303818588803b1580156200123257600080fd5b505af115801562001247573d6000803e3d6000fd5b50505050506200125662001c15565b508062001263816200393a565b91505062001006565b5062001315601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e04efec46040518163ffffffff1660e01b8152600401602060405180830381865afa158015620012df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001305919062003893565b6802a802f8630a24000062001d4b565b6000620013576040518060400160405280600381526020017f703439000000000000000000000000000000000000000000000000000000000081525062001c01565b90508082603181518110620013705762001370620038dc565b73ffffffffffffffffffffffffffffffffffffffff92831660209182029290920101526040517fc88a5e6d0000000000000000000000000000000000000000000000000000000081529082166004820152678ac7230489e800006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b1580156200140957600080fd5b505af11580156200141e573d6000803e3d6000fd5b50506040517fca669fa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200149e57600080fd5b505af1158015620014b3573d6000803e3d6000fd5b50505050601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663159090bd60006040518263ffffffff1660e01b81526004016000604051808303818588803b1580156200152357600080fd5b505af115801562001538573d6000803e3d6000fd5b505060205473ffffffffffffffffffffffffffffffffffffffff16319250620015649150620033a39050565b60005b6032811015620015d457848181518110620015865762001586620038dc565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1631828260328110620015ba57620015ba620038dc565b602002015280620015cb816200393a565b91505062001567565b50737109709ecfa91a80626ff3989d68f67f5b1dd12d631f7b4f30620015fc43600262003975565b6040518263ffffffff1660e01b81526004016200161b91815260200190565b600060405180830381600087803b1580156200163657600080fd5b505af11580156200164b573d6000803e3d6000fd5b50506021546040517fca669fa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911660048201819052319250737109709ecfa91a80626ff3989d68f67f5b1dd12d915063ca669fa790602401600060405180830381600087803b158015620016d357600080fd5b505af1158015620016e8573d6000803e3d6000fd5b50505050601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166311da60b46040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200175757600080fd5b505af11580156200176c573d6000803e3d6000fd5b5050602154620017aa92506200179c9150839073ffffffffffffffffffffffffffffffffffffffff16316200398b565b66470de4df82000062001d4b565b62001855601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639cbe5efd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200181c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001842919062003893565b6200184f88600162003975565b62001d4b565b62001981601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9c29d916040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018c7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620018ed919062003893565b601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630561d1d26040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200195b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200184f919062003893565b60006200199f66470de4df8200006802a802f8630a2400006200398b565b90506000808211620019b3576000620019d5565b8167016345785d8a00001115620019cb5781620019d5565b67016345785d8a00005b90506000620019e582846200398b565b90506000612710620019fa61138884620039a1565b62001a069190620039bb565b9050600062001a17603283620039bb565b60205490915062001a4d9062001a46908a9073ffffffffffffffffffffffffffffffffffffffff16316200398b565b8562001d4b565b60005b603281101562001ad45762001abf88826032811062001a735762001a73620038dc565b60200201518c838151811062001a8d5762001a8d620038dc565b602002602001015173ffffffffffffffffffffffffffffffffffffffff163162001ab891906200398b565b8362001d4b565b8062001acb816200393a565b91505062001a50565b50600062001ae383856200398b565b905062001b84601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e04efec46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001b57573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b7d919062003893565b8262001d4b565b505050505050505050505050565b60606015805480602002602001604051908101604052809291908181526020018280548015620006d35760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311620006a7575050505050905090565b600062001c0e8262001ddd565b5092915050565b600062001c9a62001c946040518060400160405280600c81526020017f68617350656e64696e672829000000000000000000000000000000000000000081525062001c8d601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600062001f4990919063ffffffff16565b9062001f98565b62001fdc565b601f546040517f70ca10bb00000000000000000000000000000000000000000000000000000000815261010090910473ffffffffffffffffffffffffffffffffffffffff1660048201526024810182905260006044820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d906370ca10bb90606401600060405180830381600087803b15801562001d2f57600080fd5b505af115801562001d44573d6000803e3d6000fd5b5050505050565b80821462001dd9576040517f98296c540000000000000000000000000000000000000000000000000000000081526004810183905260248101829052737109709ecfa91a80626ff3989d68f67f5b1dd12d906398296c549060440160006040518083038186803b15801562001dbf57600080fd5b505afa15801562001dd4573d6000803e3d6000fd5b505050505b5050565b6000808260405160200162001df39190620039f7565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00181529082905280516020909101207fffa18649000000000000000000000000000000000000000000000000000000008252600482018190529150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa1864990602401602060405180830381865afa15801562001e93573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001eb9919062003a15565b6040517fc657c718000000000000000000000000000000000000000000000000000000008152909250737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c7189062001f10908590879060040162003a54565b600060405180830381600087803b15801562001f2b57600080fd5b505af115801562001f40573d6000803e3d6000fd5b50505050915091565b6004820180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83161790556000825b90505b92915050565b805160208201206002830180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001660e09290921c91909117905560008262001f8f565b600062001f92826001600062001ff3838362001ffb565b549392505050565b60048201546002830154600384015460009273ffffffffffffffffffffffffffffffffffffffff169160e01b9083620020348762002a04565b73ffffffffffffffffffffffffffffffffffffffff85166000908152602089815260408083207fffffffff000000000000000000000000000000000000000000000000000000008816845282528083209051939450926200209a91859187910162003a8d565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181528151602092830120835290820192909252016000206003015460ff161562002191578515620020fc57620020fc8762002b1c565b73ffffffffffffffffffffffffffffffffffffffff84166000908152602088815260408083207fffffffff0000000000000000000000000000000000000000000000000000000087168452825280832090519092916200216191859187910162003a8d565b60405160208183030381529060405280519060200120815260200190815260200160002094505050505062001f92565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c73ffffffffffffffffffffffffffffffffffffffff1663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620021fd57600080fd5b505af115801562002212573d6000803e3d6000fd5b505050506000620022238862002bc6565b6040517f65bc948100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8816600482015290925060009150737109709ecfa91a80626ff3989d68f67f5b1dd12d906365bc9481906024016000604051808303816000875af1158015620022ab573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052620022f3919081019062003b74565b50905080516000036200238f57604080517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e60648201526084015b60405180910390fd5b80515b60006200239f8262003bdf565b915081106200281d5760007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c73ffffffffffffffffffffffffffffffffffffffff1663667f9d7089858581518110620023ff57620023ff620038dc565b60200260200101516040518363ffffffff1660e01b81526004016200244692919073ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b602060405180830381865afa15801562002464573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200248a919062003893565b90508062002501577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a588848481518110620024c957620024c9620038dc565b6020908102919091018101516040805173ffffffffffffffffffffffffffffffffffffffff9094168452918301520160405180910390a15b620025298b8484815181106200251b576200251b620038dc565b602002602001015162002cc8565b62002535575062002392565b60068b0154600090819060ff16156200258b576000620025728e878781518110620025645762002564620038dc565b602002602001015162002f50565b909450925090508062002589575050505062002392565b505b6001828201610100031b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01811b8316811c868114620025cf575050505062002392565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c6040516020016200260792919062003a8d565b60405160208183030381529060405280519060200120898981518110620026325762002632620038dc565b6020908102919091018101516040805173ffffffffffffffffffffffffffffffffffffffff90961686527fffffffff000000000000000000000000000000000000000000000000000000009094169185019190915291830152606082015260800160405180910390a16040518060800160405280878781518110620026bb57620026bb620038dc565b602002602001015160001c8152602001848152602001838152602001600115158152508e60000160008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060008a8c6040516020016200278592919062003a8d565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0018152918152815160209283012083528282019390935290820160002083518155908301516001820155908201516002820155606090910151600390910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055505050505b5073ffffffffffffffffffffffffffffffffffffffff8616600090815260208a815260408083207fffffffff0000000000000000000000000000000000000000000000000000000089168452825280832090519092916200288391879189910162003a8d565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181528151602092830120835290820192909252016000206003015460ff166200295b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201527f74287329206e6f7420666f756e642e0000000000000000000000000000000000606482015260840162002386565b87156200296d576200296d8962002b1c565b73ffffffffffffffffffffffffffffffffffffffff8616600090815260208a815260408083207fffffffff000000000000000000000000000000000000000000000000000000008916845282528083209051909291620029d291879189910162003a8d565b604051602081830303815290604052805190602001208152602001908152602001600020965050505050505092915050565b606081600701805462002a17906200383e565b905060000362002a805762001f928260010180548060200260200160405190810160405280929190818152602001828054801562002a7557602002820191906000526020600020905b81548152602001906001019080831162002a60575b505050505062003102565b81600701805462002a91906200383e565b80601f016020809104026020016040519081016040528092919081815260200182805462002abf906200383e565b801562002b105780601f1062002ae45761010080835404028352916020019162002b10565b820191906000526020600020905b81548152906001019060200180831162002af257829003601f168201915b50505050509050919050565b6004810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690556002810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000016905562002b80600182016000620033c2565b6000600382018190556006820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905562002bc3906007830190620033e2565b50565b60028101546000908190819060e01b62002be08562002a04565b60405160200162002bf392919062003c17565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526004860154909250600091829173ffffffffffffffffffffffffffffffffffffffff169062002c53908590620039f7565b600060405180830381855afa9150503d806000811462002c90576040519150601f19603f3d011682016040523d82523d6000602084013e62002c95565b606091505b5091509150600062002cba828860030154602062002cb49190620039a1565b620031af565b929792965091945050505050565b6004828101546040517f667f9d7000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911691810191909152602481018290526000908190737109709ecfa91a80626ff3989d68f67f5b1dd12d9063667f9d7090604401602060405180830381865afa15801562002d5c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002d82919062003893565b905060008062002d928662002bc6565b90925090506000811562002da857600062002dca565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5b6004888101546040517f70ca10bb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116918101919091526024810188905260448101829052909150737109709ecfa91a80626ff3989d68f67f5b1dd12d906370ca10bb90606401600060405180830381600087803b15801562002e6057600080fd5b505af115801562002e75573d6000803e3d6000fd5b50505050600062002e868862002bc6565b60048a8101546040517f70ca10bb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911691810191909152602481018a905260448101889052909250737109709ecfa91a80626ff3989d68f67f5b1dd12d91506370ca10bb90606401600060405180830381600087803b15801562002f1d57600080fd5b505af115801562002f32573d6000803e3d6000fd5b5050505083801562002f445750808314155b98975050505050505050565b6004828101546040517f667f9d7000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169181019190915260248101829052600090819081908190737109709ecfa91a80626ff3989d68f67f5b1dd12d9063667f9d7090604401602060405180830381865afa15801562002fe8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200300e919062003893565b9050600080620030218888600162003251565b91509150600080620030368a8a600062003251565b60048c8101546040517f70ca10bb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911691810191909152602481018c9052604481018890529193509150737109709ecfa91a80626ff3989d68f67f5b1dd12d906370ca10bb90606401600060405180830381600087803b158015620030ce57600080fd5b505af1158015620030e3573d6000803e3d6000fd5b50505050838015620030f25750815b9a92995097509095505050505050565b6060600082516020620031169190620039a1565b67ffffffffffffffff811115620031315762003131620038ad565b6040519080825280601f01601f1916602001820160405280156200315c576020820181803683370190505b50905060005b835181101562001c0e576000848281518110620031835762003183620038dc565b602002602001015190508082602002602001840152508080620031a6906200393a565b91505062003162565b60008060006020855111620031c6578451620031c9565b60205b905060005b818110156200324757620031e4816008620039a1565b86620031f1838862003975565b81518110620032045762003204620038dc565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016901c9290921791806200323e816200393a565b915050620031ce565b5090949350505050565b60008060005b610100811015620033845760008462003274576001821b62003286565b620032818260ff6200398b565b6001901b5b6004888101546040517f70ca10bb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116918101919091526024810188905260448101829052909150737109709ecfa91a80626ff3989d68f67f5b1dd12d906370ca10bb90606401600060405180830381600087803b1580156200331c57600080fd5b505af115801562003331573d6000803e3d6000fd5b50505050600080620033438962002bc6565b915091508180156200335457508015155b156200336b5760018495509550505050506200338d565b50505080806200337b906200393a565b91505062003257565b50600080915091505b935093915050565b612a408062003c6283390190565b6040518061064001604052806032906020820280368337509192915050565b508054600082559060005260206000209081019062002bc391906200341c565b508054620033f0906200383e565b6000825580601f1062003401575050565b601f01602090049060005260206000209081019062002bc391905b5b808211156200343357600081556001016200341d565b5090565b6020808252825182820181905260009190848201906040850190845b818110156200348757835173ffffffffffffffffffffffffffffffffffffffff168352928401929184019160010162003453565b50909695505050505050565b60005b83811015620034b057818101518382015260200162003496565b50506000910152565b60008151808452620034d381602086016020860162003493565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b8581101562003604577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08b85030187528251805173ffffffffffffffffffffffffffffffffffffffff1685528901518985018990528051898601819052908a0190606081881b870181019190870190855b81811015620035ed577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0898503018352620035da848651620034b9565b948e01949350918d01916001016200359d565b505050978a0197945050918801916001016200352c565b50919a9950505050505050505050565b600081518084526020808501945080840160005b83811015620036685781517fffffffff00000000000000000000000000000000000000000000000000000000168752958201959082019060010162003628565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156200370e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc089840301855281518051878552620036df88860182620034b9565b91890151858303868b0152919050620036f9818362003614565b9689019694505050908601906001016200369a565b509098975050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562003793577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088860301845262003780858351620034b9565b9450928501929085019060010162003743565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156200370e578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00185528151805173ffffffffffffffffffffffffffffffffffffffff1684528701518784018790526200382a8785018262003614565b9588019593505090860190600101620037c7565b600181811c908216806200385357607f821691505b6020821081036200388d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600060208284031215620038a657600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036200396e576200396e6200390b565b5060010190565b8082018082111562001f925762001f926200390b565b8181038181111562001f925762001f926200390b565b808202811582820484141762001f925762001f926200390b565b600082620039f2577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000825162003a0b81846020870162003493565b9190910192915050565b60006020828403121562003a2857600080fd5b815173ffffffffffffffffffffffffffffffffffffffff8116811462003a4d57600080fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8316815260406020820152600062003a856040830184620034b9565b949350505050565b6000835162003aa181846020880162003493565b9190910191825250602001919050565b600082601f83011262003ac357600080fd5b8151602067ffffffffffffffff8083111562003ae35762003ae3620038ad565b8260051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f8301168101818110848211171562003b295762003b29620038ad565b60405293845285810183019383810192508785111562003b4857600080fd5b83870191505b8482101562003b695781518352918301919083019062003b4e565b979650505050505050565b6000806040838503121562003b8857600080fd5b825167ffffffffffffffff8082111562003ba157600080fd5b62003baf8683870162003ab1565b9350602085015191508082111562003bc657600080fd5b5062003bd58582860162003ab1565b9150509250929050565b60008162003bf15762003bf16200390b565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b7fffffffff00000000000000000000000000000000000000000000000000000000831681526000825162003c5381600485016020870162003493565b91909101600401939250505056fe60e060405260016014553480156200001657600080fd5b5060405162002a4038038062002a40833981016040819052620000399162000190565b670de0b6b3a7640000841015620000885760405162461bcd60e51b815260206004820152600e60248201526d0c4c2e6caa0e4d2c6ca78628aa8960931b60448201526064015b60405180910390fd5b612710831015620000cc5760405162461bcd60e51b815260206004820152600d60248201526c0daead8e8d2e0d8d2cae47862f609b1b60448201526064016200007f565b6127108211156200010e5760405162461bcd60e51b815260206004820152600b60248201526a7061796f75743e3130302560a81b60448201526064016200007f565b6001600160a01b038116620001525760405162461bcd60e51b8152602060048201526009602482015268063726561746f723d360bc1b60448201526064016200007f565b608084905260a09290925260c0526000919091556001600255601580546001600160a01b0319166001600160a01b03909216919091179055620001e1565b60008060008060808587031215620001a757600080fd5b845160208601516040870151606088015192965090945092506001600160a01b0381168114620001d657600080fd5b939692955090935050565b60805160a05160c0516128136200022d600039600081816105b101528181611e760152611eb601526000818161036c0152611c7e015260008181610228015261220201526128136000f3fe6080604052600436106101b05760003560e01c80635b4e628b116100ec578063b3115ba61161008a578063d4c8a82a11610064578063d4c8a82a146105d3578063e04efec41461062f578063e927fc5c14610644578063f11526771461067157610204565b8063b3115ba61461054e578063ba541cef14610564578063cee6b3551461059f57610204565b806399de4a22116100c657806399de4a22146104d15780639cbe5efd146104e7578063a9c29d91146104fd578063aed161381461051357610204565b80635b4e628b146103e85780636accd0ab1461042357806391c07823146104a457610204565b8063379607f511610159578063461caa3d11610133578063461caa3d1461035a5780635236434c1461038e5780635708b4cf146103b25780635876aeec146103d257610204565b8063379607f5146103015780633b574ee21461032157806342a5bf3d1461034557610204565b8063159090bd1161018a578063159090bd146102875780632492ef591461028f578063316b9641146102e157610204565b80630561d1d21461021657806311da60b41461025d578063150a54be1461027457610204565b366102045734600360008282546101c791906122de565b90915550506003546040519081527f2ba2169cd2502a6cc4fd55f87f2dcbceef588b593aa4fdc883d4fc62e65ed6a99060200160405180910390a1005b34600360008282546101c791906122de565b34801561022257600080fd5b5061024a7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b34801561026957600080fd5b50610272610686565b005b6102726102823660046122f7565b610aa6565b6102726110f9565b34801561029b57600080fd5b506001546102bc9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610254565b3480156102ed57600080fd5b506102726102fc366004612392565b61147a565b34801561030d57600080fd5b5061027261031c3660046123b4565b6115bf565b34801561032d57600080fd5b50610336611964565b604051610254939291906123cd565b34801561035157600080fd5b5060075461024a565b34801561036657600080fd5b5061024a7f000000000000000000000000000000000000000000000000000000000000000081565b34801561039a57600080fd5b5060095460ff165b6040519015158152602001610254565b3480156103be57600080fd5b506102bc6103cd36600461245e565b611a16565b3480156103de57600080fd5b5061024a60045481565b3480156103f457600080fd5b506103a2610403366004612480565b600c60209081526000928352604080842090915290825290205460ff1681565b34801561042f57600080fd5b506005546006546007546008546009546104639473ffffffffffffffffffffffffffffffffffffffff169392919060ff1685565b6040805173ffffffffffffffffffffffffffffffffffffffff909616865260208601949094529284019190915260608301521515608082015260a001610254565b3480156104b057600080fd5b5061024a6104bf3660046123b4565b600b6020526000908152604090205481565b3480156104dd57600080fd5b5061024a60135481565b3480156104f357600080fd5b5061024a60025481565b34801561050957600080fd5b5061024a60005481565b34801561051f57600080fd5b506103a261052e366004612480565b600a60209081526000928352604080842090915290825290205460ff1681565b34801561055a57600080fd5b5061024a60035481565b34801561057057600080fd5b506103a261057f366004612480565b600f60209081526000928352604080842090915290825290205460ff1681565b3480156105ab57600080fd5b5061024a7f000000000000000000000000000000000000000000000000000000000000000081565b3480156105df57600080fd5b506106126105ee3660046123b4565b600e6020526000908152604090208054600182015460029092015490919060ff1683565b604080519384526020840192909252151590820152606001610254565b34801561063b57600080fd5b5061024a611a5b565b34801561065057600080fd5b506015546102bc9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561067d57600080fd5b50610336611a6a565b6002601454036106f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b60026014556040805160a08101825260055473ffffffffffffffffffffffffffffffffffffffff168152600654602082015260075491810191909152600854606082015260095460ff16151560808201819052610780576040517fdefc4c3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80604001514310156107be576040517ffe8e911400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604081015140806107fb576040517f1e41751d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b66470de4df820000600061080d611b52565b905060008183111561081f5781610821565b825b905080156108f457806003600082825461083b91906124ac565b9091555050604051600090339083908381818185875af1925050503d8060008114610882576040519150601f19603f3d011682016040523d82523d6000602084013e610887565b606091505b50509050806108f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6b656570657220706179206661696c656400000000000000000000000000000060448201526064016106ee565b505b50508251606080850151604080516020810187905273ffffffffffffffffffffffffffffffffffffffff9094169084015290820152600090608001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291815281516020928301206002546000908152600d9093529082205490925060321161098857506000610999565b6008610995600a846124ee565b1090505b600580547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055600060068190556007819055600855600980547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690558015610a2f578451610a0990611b7b565b6002546000908152600d6020526040902054603211610a2a57610a2a611d3c565b610a37565b610a37611d3c565b8451606080870151604080518515158152602081018790529081019190915273ffffffffffffffffffffffffffffffffffffffff909216917f70269c4de1853bd69b10c1bd439721e36732825ce14e2fbc5213febaacaaf9af910160405180910390a250506001601455505050565b600260145403610b12576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016106ee565b6002601455670de0b6b3a7640000341015610b69576040517f7c83fcf0000000000000000000000000000000000000000000000000000000008152346004820152670de0b6b3a764000060248201526044016106ee565b604080516060810182526010805473ffffffffffffffffffffffffffffffffffffffff16825260115460208301526012805460009484019190610bab90612502565b80601f0160208091040260200160405190810160405280929190818152602001828054610bd790612502565b8015610c245780601f10610bf957610100808354040283529160200191610c24565b820191906000526020600020905b815481529060010190602001808311610c0757829003601f168201915b50505091909252505081519192505073ffffffffffffffffffffffffffffffffffffffff16610dc4573460036000828254610c5f91906122de565b925050819055503460136000828254610c7891906122de565b9250508190555060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200134815260200184848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509152508051601080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90921691909117815560208201516011556040820151601290610d4490826125d3565b50506003546040519081527f2ba2169cd2502a6cc4fd55f87f2dcbceef588b593aa4fdc883d4fc62e65ed6a9915060200160405180910390a160025460405133917fbcd59d41754af57ee9503b878894bf5fdadb31acb76cb009eacf72ea6ad0822a91610db6913491889188916126ed565b60405180910390a2506110f0565b6000610dd98260200151612ee0612710612228565b905080341015610e1e576040517f7c83fcf0000000000000000000000000000000000000000000000000000000008152346004820152602481018290526044016106ee565b3460036000828254610e3091906122de565b925050819055503460136000828254610e4991906122de565b90915550506003546040519081527f2ba2169cd2502a6cc4fd55f87f2dcbceef588b593aa4fdc883d4fc62e65ed6a99060200160405180910390a1816020015160136000828254610e9a91906124ac565b9091555050602082015160038054600090610eb69084906124ac565b90915550508151602083015160405160009273ffffffffffffffffffffffffffffffffffffffff1691908381818185875af1925050503d8060008114610f18576040519150601f19603f3d011682016040523d82523d6000602084013e610f1d565b606091505b5050905080610f88576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f73706f6e736f7220726566756e64206661696c6564000000000000000000000060448201526064016106ee565b8251602080850151600254604080519283529282015273ffffffffffffffffffffffffffffffffffffffff909216917f93d8bd2b89791caf148e673fa7f739059c13c17f8c3bfc937f953be7257e8110910160405180910390a260405180606001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200134815260200186868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509152508051601080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091178155602082015160115560408201516012906110a790826125d3565b50506002546040513392507fbcd59d41754af57ee9503b878894bf5fdadb31acb76cb009eacf72ea6ad0822a916110e49134918a918a91906126ed565b60405180910390a25050505b50506001601455565b600260145403611165576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016106ee565b600260145560095460ff16156111a7576040517f3eed9ae900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002546000908152600d6020526040902054603281106111f3576040517f6c8c8d2100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6031811460008161120657600054611209565b60005b905080341461124d576040517f7c83fcf0000000000000000000000000000000000000000000000000000000008152346004820152602481018290526044016106ee565b6002546000908152600c6020908152604080832033845290915290205460ff16156112aa576002546040517f666ad0c70000000000000000000000000000000000000000000000000000000081526004016106ee91815260200190565b600280546000908152600c602090815260408083203380855290835281842080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600190811790915594548452600d8352908320805494850181558352912090910180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091179055341561138b57346003600082825461134f91906122de565b90915550506003546040519081527f2ba2169cd2502a6cc4fd55f87f2dcbceef588b593aa4fdc883d4fc62e65ed6a99060200160405180910390a15b60006113984360016122de565b6040805160a08101825233808252346020808401829052838501869052600254606080860182905260016080909601869052600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001686179055600684905560078890556008829055600980547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169096179095558551928352908201869052938101939093529293507f6c5dd09f0a96a53c958d8e8898a12d877ec2853d8e61f9cb45c0c36adaf900c9910160405180910390a2505060016014555050565b60155473ffffffffffffffffffffffffffffffffffffffff1633146114fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f6e6f742d63726561746f7200000000000000000000000000000000000000000060448201526064016106ee565b73ffffffffffffffffffffffffffffffffffffffff8116611578576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f63726561746f723d30000000000000000000000000000000000000000000000060448201526064016106ee565b601580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60026014540361162b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016106ee565b600260148190556000828152600e60209081526040918290208251606081018452815481526001820154928101929092529092015460ff1615159082018190526116a1576040517f969bf72800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000828152600a6020908152604080832033845290915290205460ff166116f4576040517f622aebc300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000828152600f6020908152604080832033845290915290205460ff1615611748576040517f646cf55800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000816020015160001461176c5760208201518251611767919061274b565b61176f565b60005b9050806000036117ab576040517f969bf72800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000838152600f60209081526040808320338452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055600454811115611859576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f7265736572766520756e646572666c6f7700000000000000000000000000000060448201526064016106ee565b806004600082825461186b91906124ac565b9091555050604051600090339083908381818185875af1925050503d80600081146118b2576040519150601f19603f3d011682016040523d82523d6000602084013e6118b7565b606091505b5050905080611922576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f636c61696d207472616e73666572206661696c6564000000000000000000000060448201526064016106ee565b604051828152849033907f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf79060200160405180910390a3505060016014555050565b601080546011546012805473ffffffffffffffffffffffffffffffffffffffff90931693919261199390612502565b80601f01602080910402602001604051908101604052809291908181526020018280546119bf90612502565b8015611a0c5780601f106119e157610100808354040283529160200191611a0c565b820191906000526020600020905b8154815290600101906020018083116119ef57829003601f168201915b5050505050905083565b600d6020528160005260406000208181548110611a3257600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff169150829050565b6000611a65611b52565b905090565b60408051606081810183526010805473ffffffffffffffffffffffffffffffffffffffff168352601154602084015260128054600095869586949093909291840191611ab590612502565b80601f0160208091040260200160405190810160405280929190818152602001828054611ae190612502565b8015611b2e5780601f10611b0357610100808354040283529160200191611b2e565b820191906000526020600020905b815481529060010190602001808311611b1157829003601f168201915b50505091909252505081516020830151604090930151909792965094509092505050565b60035460135460009190808211611b6a576000611b74565b611b7481836124ac565b9250505090565b6002546000908152600a6020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16611c3557600280546000908152600a6020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168452825280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600190811790915593548352600b90915281208054909190611c2f9084906122de565b90915550505b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316179055600054611ca5907f0000000000000000000000000000000000000000000000000000000000000000612710612228565b600081905560025460408051918252602082019290925273ffffffffffffffffffffffffffffffffffffffff8316917e40870511fcd025e35c10818502bec08721e7745dbed12dc9d96f6427581411910160405180910390a27f2ba2169cd2502a6cc4fd55f87f2dcbceef588b593aa4fdc883d4fc62e65ed6a9600354604051611d3191815260200190565b60405180910390a150565b6000611d46611b52565b905060008167016345785d8a00001115611d605781611d6a565b67016345785d8a00005b90508015611e55578060036000828254611d8491906124ac565b909155505060155460405160009173ffffffffffffffffffffffffffffffffffffffff169083908381818185875af1925050503d8060008114611de3576040519150601f19603f3d011682016040523d82523d6000602084013e611de8565b606091505b5050905080611e53576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f63726561746f7220706179206661696c6564000000000000000000000000000060448201526064016106ee565b505b6002546000908152600d6020526040812054908115801590611e97575060007f0000000000000000000000000000000000000000000000000000000000000000115b15612038576000611ea6611b52565b90508015611ee857612710611edb7f00000000000000000000000000000000000000000000000000000000000000008361275f565b611ee5919061274b565b91505b8115612036578160036000828254611f0091906124ac565b9091555060009050611f12848461274b565b90508015612034576002546000908152600d60205260408120805490915b81811015612030576000838281548110611f4c57611f4c612776565b600091825260208220015460405173ffffffffffffffffffffffffffffffffffffffff9091169187919081818185875af1925050503d8060008114611fad576040519150601f19603f3d011682016040523d82523d6000602084013e611fb2565b606091505b505090508061201d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f7061727469636970616e7420706179206661696c65640000000000000000000060448201526064016106ee565b5080612028816127a5565b915050611f30565b5050505b505b505b604080516060808201835283825260208083018681526001848601818152600280546000908152600e8652889020965187559251918601919091555193810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169415159490941790935591546003548451868152938401879052938301939093527fff9d41e1547acb5eda1e3bac0c795f57760c96016cdd641af6bdd90270a768f3910160405180910390a27f2ba2169cd2502a6cc4fd55f87f2dcbceef588b593aa4fdc883d4fc62e65ed6a960035460405161211a91815260200190565b60405180910390a16000601354118061214a575060105473ffffffffffffffffffffffffffffffffffffffff1615155b156121be5760006013819055601080547fffffffffffffffffffffffff000000000000000000000000000000000000000016815560118290559061218f601282612259565b50506002546040517f2aceb5e6de828c86a2adae4aee75a748979d2e1108b075412b068d8764aaa99090600090a25b6001600260008282546121d191906122de565b9091555050600180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905550507f00000000000000000000000000000000000000000000000000000000000000006000555050565b6000838302801561224d578260018483010381612247576122476124bf565b04612250565b60005b95945050505050565b50805461226590612502565b6000825580601f10612275575050565b601f0160209004906000526020600020908101906122939190612296565b50565b5b808211156122ab5760008155600101612297565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156122f1576122f16122af565b92915050565b6000806020838503121561230a57600080fd5b823567ffffffffffffffff8082111561232257600080fd5b818501915085601f83011261233657600080fd5b81358181111561234557600080fd5b86602082850101111561235757600080fd5b60209290920196919550909350505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461238d57600080fd5b919050565b6000602082840312156123a457600080fd5b6123ad82612369565b9392505050565b6000602082840312156123c657600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff8416815260006020848184015260606040840152835180606085015260005b8181101561241d57858101830151858201608001528201612401565b5060006080828601015260807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010192505050949350505050565b6000806040838503121561247157600080fd5b50508035926020909101359150565b6000806040838503121561249357600080fd5b823591506124a360208401612369565b90509250929050565b818103818111156122f1576122f16122af565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826124fd576124fd6124bf565b500690565b600181811c9082168061251657607f821691505b60208210810361254f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b601f8211156125ce57600081815260208120601f850160051c810160208610156125ab5750805b601f850160051c820191505b818110156125ca578281556001016125b7565b5050505b505050565b815167ffffffffffffffff8111156125ed576125ed612555565b612601816125fb8454612502565b84612584565b602080601f831160018114612654576000841561261e5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556125ca565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156126a157888601518255948401946001909101908401612682565b50858210156126dd57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b8481526060602082015282606082015282846080830137600060808483010152600060807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f860116830101905082604083015295945050505050565b60008261275a5761275a6124bf565b500490565b80820281158282048414176122f1576122f16122af565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036127d6576127d66122af565b506001019056fea2646970667358221220429fddb05ea88f414d208972bc1f41ba3f6829691dab741cb95556dab629364c64736f6c63430008130033a26469706673582212202a64d6020a00043c5bb1ed438acbbc35fedfe7fd56e4fdb666ed197f5175cb5064736f6c63430008130033",
    "sourceMap": "201:3643:20:-:0;;;3126:44:2;;;3166:4;-1:-1:-1;;3126:44:2;;;;;;;;1065:26:13;;;;;;;;;;;201:3643:20;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620000fd5760003560e01c8063916a17c61162000097578063ba414fa6116200006e578063ba414fa614620001bc578063d095712e14620001d7578063e20c9f7114620001e1578063fa7626d414620001eb57600080fd5b8063916a17c6146200018f578063b0464fdc14620001a8578063b5508aa914620001b257600080fd5b80633e5e3c2311620000d85780633e5e3c2314620001495780633f7286f4146200015357806366d9a9a0146200015d57806385226c81146200017657600080fd5b80630a9254e414620001025780631ed7831c146200010e5780632ade38801462000130575b600080fd5b6200010c620001f9565b005b620001186200066c565b60405162000127919062003437565b60405180910390f35b6200013a620006dd565b60405162000127919062003505565b6200011862000838565b62000118620008a7565b6200016762000916565b60405162000127919062003673565b6200018062000aa4565b6040516200012791906200371c565b6200019962000b7e565b604051620001279190620037a0565b6200019962000c8a565b6200018062000d96565b620001c662000e70565b604051901515815260200162000127565b6200010c62000f44565b6200011862001b92565b601f54620001c69060ff1681565b60006200023b6040518060400160405280600881526020017f6465706c6f79657200000000000000000000000000000000000000000000000081525062001c01565b90506200027d6040518060400160405280600781526020017f63726561746f720000000000000000000000000000000000000000000000000081525062001c01565b602060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620002fd6040518060400160405280600681526020017f6b6565706572000000000000000000000000000000000000000000000000000081525062001c01565b602180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9283161790556040517fc88a5e6d0000000000000000000000000000000000000000000000000000000081529082166004820152683635c9adc5dea000006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b158015620003b557600080fd5b505af1158015620003ca573d6000803e3d6000fd5b50506020546040517fc88a5e6d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116600482015260006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c88a5e6d9150604401600060405180830381600087803b1580156200045557600080fd5b505af11580156200046a573d6000803e3d6000fd5b50506021546040517fc88a5e6d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116600482015260006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c88a5e6d9150604401600060405180830381600087803b158015620004f557600080fd5b505af11580156200050a573d6000803e3d6000fd5b50506040517fca669fa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200058a57600080fd5b505af11580156200059f573d6000803e3d6000fd5b5050602054604051670de0b6b3a76400009350612ee092506113889173ffffffffffffffffffffffffffffffffffffffff1690620005dd9062003395565b9384526020840192909252604083015273ffffffffffffffffffffffffffffffffffffffff166060820152608001604051809103906000f08015801562000628573d6000803e3d6000fd5b50601f60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606016805480602002602001604051908101604052809291908181526020018280548015620006d357602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311620006a7575b5050505050905090565b6060601e805480602002602001604051908101604052809291908181526020016000905b828210156200082f576000848152602080822060408051808201825260028702909201805473ffffffffffffffffffffffffffffffffffffffff168352600181018054835181870281018701909452808452939591948681019491929084015b828210156200081757838290600052602060002001805462000783906200383e565b80601f0160208091040260200160405190810160405280929190818152602001828054620007b1906200383e565b8015620008025780601f10620007d65761010080835404028352916020019162000802565b820191906000526020600020905b815481529060010190602001808311620007e457829003601f168201915b50505050508152602001906001019062000761565b50505050815250508152602001906001019062000701565b50505050905090565b60606018805480602002602001604051908101604052809291908181526020018280548015620006d35760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311620006a7575050505050905090565b60606017805480602002602001604051908101604052809291908181526020018280548015620006d35760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311620006a7575050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156200082f578382906000526020600020906002020160405180604001604052908160008201805462000970906200383e565b80601f01602080910402602001604051908101604052809291908181526020018280546200099e906200383e565b8015620009ef5780601f10620009c357610100808354040283529160200191620009ef565b820191906000526020600020905b815481529060010190602001808311620009d157829003601f168201915b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801562000a8b57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841162000a375790505b505050505081525050815260200190600101906200093a565b6060601a805480602002602001604051908101604052809291908181526020016000905b828210156200082f57838290600052602060002001805462000aea906200383e565b80601f016020809104026020016040519081016040528092919081815260200182805462000b18906200383e565b801562000b695780601f1062000b3d5761010080835404028352916020019162000b69565b820191906000526020600020905b81548152906001019060200180831162000b4b57829003601f168201915b50505050508152602001906001019062000ac8565b6060601d805480602002602001604051908101604052809291908181526020016000905b828210156200082f57600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801562000c7157602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841162000c1d5790505b5050505050815250508152602001906001019062000ba2565b6060601c805480602002602001604051908101604052809291908181526020016000905b828210156200082f57600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801562000d7d57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841162000d295790505b5050505050815250508152602001906001019062000cae565b60606019805480602002602001604051908101604052809291908181526020016000905b828210156200082f57838290600052602060002001805462000ddc906200383e565b80601f016020809104026020016040519081016040528092919081815260200182805462000e0a906200383e565b801562000e5b5780601f1062000e2f5761010080835404028352916020019162000e5b565b820191906000526020600020905b81548152906001019060200180831162000e3d57829003601f168201915b50505050508152602001906001019062000dba565b60085460009060ff161562000e855750600190565b6040517f667f9d70000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d600482018190527f6661696c65640000000000000000000000000000000000000000000000000000602483015260009163667f9d7090604401602060405180830381865afa15801562000f17573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f3d919062003893565b1415905090565b6000601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639cbe5efd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000fb4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000fda919062003893565b604080516032808252610660820190925291925060009190602082016106408036833701905050905060005b60318110156200126c576040517f7000000000000000000000000000000000000000000000000000000000000000602082015260218101829052600090620010609060410160405160208183030381529060405262001c01565b905080838381518110620010785762001078620038dc565b73ffffffffffffffffffffffffffffffffffffffff92831660209182029290920101526040517fc88a5e6d0000000000000000000000000000000000000000000000000000000081529082166004820152678ac7230489e800006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b1580156200111157600080fd5b505af115801562001126573d6000803e3d6000fd5b50506040517fca669fa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b158015620011a657600080fd5b505af1158015620011bb573d6000803e3d6000fd5b50505050601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663159090bd670de0b6b3a76400006040518263ffffffff1660e01b81526004016000604051808303818588803b1580156200123257600080fd5b505af115801562001247573d6000803e3d6000fd5b50505050506200125662001c15565b508062001263816200393a565b91505062001006565b5062001315601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e04efec46040518163ffffffff1660e01b8152600401602060405180830381865afa158015620012df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001305919062003893565b6802a802f8630a24000062001d4b565b6000620013576040518060400160405280600381526020017f703439000000000000000000000000000000000000000000000000000000000081525062001c01565b90508082603181518110620013705762001370620038dc565b73ffffffffffffffffffffffffffffffffffffffff92831660209182029290920101526040517fc88a5e6d0000000000000000000000000000000000000000000000000000000081529082166004820152678ac7230489e800006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b1580156200140957600080fd5b505af11580156200141e573d6000803e3d6000fd5b50506040517fca669fa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156200149e57600080fd5b505af1158015620014b3573d6000803e3d6000fd5b50505050601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663159090bd60006040518263ffffffff1660e01b81526004016000604051808303818588803b1580156200152357600080fd5b505af115801562001538573d6000803e3d6000fd5b505060205473ffffffffffffffffffffffffffffffffffffffff16319250620015649150620033a39050565b60005b6032811015620015d457848181518110620015865762001586620038dc565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1631828260328110620015ba57620015ba620038dc565b602002015280620015cb816200393a565b91505062001567565b50737109709ecfa91a80626ff3989d68f67f5b1dd12d631f7b4f30620015fc43600262003975565b6040518263ffffffff1660e01b81526004016200161b91815260200190565b600060405180830381600087803b1580156200163657600080fd5b505af11580156200164b573d6000803e3d6000fd5b50506021546040517fca669fa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911660048201819052319250737109709ecfa91a80626ff3989d68f67f5b1dd12d915063ca669fa790602401600060405180830381600087803b158015620016d357600080fd5b505af1158015620016e8573d6000803e3d6000fd5b50505050601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166311da60b46040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200175757600080fd5b505af11580156200176c573d6000803e3d6000fd5b5050602154620017aa92506200179c9150839073ffffffffffffffffffffffffffffffffffffffff16316200398b565b66470de4df82000062001d4b565b62001855601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639cbe5efd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200181c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001842919062003893565b6200184f88600162003975565b62001d4b565b62001981601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9c29d916040518163ffffffff1660e01b8152600401602060405180830381865afa158015620018c7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620018ed919062003893565b601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630561d1d26040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200195b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200184f919062003893565b60006200199f66470de4df8200006802a802f8630a2400006200398b565b90506000808211620019b3576000620019d5565b8167016345785d8a00001115620019cb5781620019d5565b67016345785d8a00005b90506000620019e582846200398b565b90506000612710620019fa61138884620039a1565b62001a069190620039bb565b9050600062001a17603283620039bb565b60205490915062001a4d9062001a46908a9073ffffffffffffffffffffffffffffffffffffffff16316200398b565b8562001d4b565b60005b603281101562001ad45762001abf88826032811062001a735762001a73620038dc565b60200201518c838151811062001a8d5762001a8d620038dc565b602002602001015173ffffffffffffffffffffffffffffffffffffffff163162001ab891906200398b565b8362001d4b565b8062001acb816200393a565b91505062001a50565b50600062001ae383856200398b565b905062001b84601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e04efec46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001b57573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b7d919062003893565b8262001d4b565b505050505050505050505050565b60606015805480602002602001604051908101604052809291908181526020018280548015620006d35760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311620006a7575050505050905090565b600062001c0e8262001ddd565b5092915050565b600062001c9a62001c946040518060400160405280600c81526020017f68617350656e64696e672829000000000000000000000000000000000000000081525062001c8d601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600062001f4990919063ffffffff16565b9062001f98565b62001fdc565b601f546040517f70ca10bb00000000000000000000000000000000000000000000000000000000815261010090910473ffffffffffffffffffffffffffffffffffffffff1660048201526024810182905260006044820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d906370ca10bb90606401600060405180830381600087803b15801562001d2f57600080fd5b505af115801562001d44573d6000803e3d6000fd5b5050505050565b80821462001dd9576040517f98296c540000000000000000000000000000000000000000000000000000000081526004810183905260248101829052737109709ecfa91a80626ff3989d68f67f5b1dd12d906398296c549060440160006040518083038186803b15801562001dbf57600080fd5b505afa15801562001dd4573d6000803e3d6000fd5b505050505b5050565b6000808260405160200162001df39190620039f7565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00181529082905280516020909101207fffa18649000000000000000000000000000000000000000000000000000000008252600482018190529150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa1864990602401602060405180830381865afa15801562001e93573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001eb9919062003a15565b6040517fc657c718000000000000000000000000000000000000000000000000000000008152909250737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c7189062001f10908590879060040162003a54565b600060405180830381600087803b15801562001f2b57600080fd5b505af115801562001f40573d6000803e3d6000fd5b50505050915091565b6004820180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83161790556000825b90505b92915050565b805160208201206002830180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001660e09290921c91909117905560008262001f8f565b600062001f92826001600062001ff3838362001ffb565b549392505050565b60048201546002830154600384015460009273ffffffffffffffffffffffffffffffffffffffff169160e01b9083620020348762002a04565b73ffffffffffffffffffffffffffffffffffffffff85166000908152602089815260408083207fffffffff000000000000000000000000000000000000000000000000000000008816845282528083209051939450926200209a91859187910162003a8d565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181528151602092830120835290820192909252016000206003015460ff161562002191578515620020fc57620020fc8762002b1c565b73ffffffffffffffffffffffffffffffffffffffff84166000908152602088815260408083207fffffffff0000000000000000000000000000000000000000000000000000000087168452825280832090519092916200216191859187910162003a8d565b60405160208183030381529060405280519060200120815260200190815260200160002094505050505062001f92565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c73ffffffffffffffffffffffffffffffffffffffff1663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620021fd57600080fd5b505af115801562002212573d6000803e3d6000fd5b505050506000620022238862002bc6565b6040517f65bc948100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8816600482015290925060009150737109709ecfa91a80626ff3989d68f67f5b1dd12d906365bc9481906024016000604051808303816000875af1158015620022ab573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052620022f3919081019062003b74565b50905080516000036200238f57604080517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e60648201526084015b60405180910390fd5b80515b60006200239f8262003bdf565b915081106200281d5760007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c73ffffffffffffffffffffffffffffffffffffffff1663667f9d7089858581518110620023ff57620023ff620038dc565b60200260200101516040518363ffffffff1660e01b81526004016200244692919073ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b602060405180830381865afa15801562002464573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200248a919062003893565b90508062002501577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a588848481518110620024c957620024c9620038dc565b6020908102919091018101516040805173ffffffffffffffffffffffffffffffffffffffff9094168452918301520160405180910390a15b620025298b8484815181106200251b576200251b620038dc565b602002602001015162002cc8565b62002535575062002392565b60068b0154600090819060ff16156200258b576000620025728e878781518110620025645762002564620038dc565b602002602001015162002f50565b909450925090508062002589575050505062002392565b505b6001828201610100031b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01811b8316811c868114620025cf575050505062002392565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c6040516020016200260792919062003a8d565b60405160208183030381529060405280519060200120898981518110620026325762002632620038dc565b6020908102919091018101516040805173ffffffffffffffffffffffffffffffffffffffff90961686527fffffffff000000000000000000000000000000000000000000000000000000009094169185019190915291830152606082015260800160405180910390a16040518060800160405280878781518110620026bb57620026bb620038dc565b602002602001015160001c8152602001848152602001838152602001600115158152508e60000160008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060008a8c6040516020016200278592919062003a8d565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0018152918152815160209283012083528282019390935290820160002083518155908301516001820155908201516002820155606090910151600390910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055505050505b5073ffffffffffffffffffffffffffffffffffffffff8616600090815260208a815260408083207fffffffff0000000000000000000000000000000000000000000000000000000089168452825280832090519092916200288391879189910162003a8d565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181528151602092830120835290820192909252016000206003015460ff166200295b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201527f74287329206e6f7420666f756e642e0000000000000000000000000000000000606482015260840162002386565b87156200296d576200296d8962002b1c565b73ffffffffffffffffffffffffffffffffffffffff8616600090815260208a815260408083207fffffffff000000000000000000000000000000000000000000000000000000008916845282528083209051909291620029d291879189910162003a8d565b604051602081830303815290604052805190602001208152602001908152602001600020965050505050505092915050565b606081600701805462002a17906200383e565b905060000362002a805762001f928260010180548060200260200160405190810160405280929190818152602001828054801562002a7557602002820191906000526020600020905b81548152602001906001019080831162002a60575b505050505062003102565b81600701805462002a91906200383e565b80601f016020809104026020016040519081016040528092919081815260200182805462002abf906200383e565b801562002b105780601f1062002ae45761010080835404028352916020019162002b10565b820191906000526020600020905b81548152906001019060200180831162002af257829003601f168201915b50505050509050919050565b6004810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690556002810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000016905562002b80600182016000620033c2565b6000600382018190556006820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905562002bc3906007830190620033e2565b50565b60028101546000908190819060e01b62002be08562002a04565b60405160200162002bf392919062003c17565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526004860154909250600091829173ffffffffffffffffffffffffffffffffffffffff169062002c53908590620039f7565b600060405180830381855afa9150503d806000811462002c90576040519150601f19603f3d011682016040523d82523d6000602084013e62002c95565b606091505b5091509150600062002cba828860030154602062002cb49190620039a1565b620031af565b929792965091945050505050565b6004828101546040517f667f9d7000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911691810191909152602481018290526000908190737109709ecfa91a80626ff3989d68f67f5b1dd12d9063667f9d7090604401602060405180830381865afa15801562002d5c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002d82919062003893565b905060008062002d928662002bc6565b90925090506000811562002da857600062002dca565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5b6004888101546040517f70ca10bb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116918101919091526024810188905260448101829052909150737109709ecfa91a80626ff3989d68f67f5b1dd12d906370ca10bb90606401600060405180830381600087803b15801562002e6057600080fd5b505af115801562002e75573d6000803e3d6000fd5b50505050600062002e868862002bc6565b60048a8101546040517f70ca10bb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911691810191909152602481018a905260448101889052909250737109709ecfa91a80626ff3989d68f67f5b1dd12d91506370ca10bb90606401600060405180830381600087803b15801562002f1d57600080fd5b505af115801562002f32573d6000803e3d6000fd5b5050505083801562002f445750808314155b98975050505050505050565b6004828101546040517f667f9d7000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169181019190915260248101829052600090819081908190737109709ecfa91a80626ff3989d68f67f5b1dd12d9063667f9d7090604401602060405180830381865afa15801562002fe8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200300e919062003893565b9050600080620030218888600162003251565b91509150600080620030368a8a600062003251565b60048c8101546040517f70ca10bb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911691810191909152602481018c9052604481018890529193509150737109709ecfa91a80626ff3989d68f67f5b1dd12d906370ca10bb90606401600060405180830381600087803b158015620030ce57600080fd5b505af1158015620030e3573d6000803e3d6000fd5b50505050838015620030f25750815b9a92995097509095505050505050565b6060600082516020620031169190620039a1565b67ffffffffffffffff811115620031315762003131620038ad565b6040519080825280601f01601f1916602001820160405280156200315c576020820181803683370190505b50905060005b835181101562001c0e576000848281518110620031835762003183620038dc565b602002602001015190508082602002602001840152508080620031a6906200393a565b91505062003162565b60008060006020855111620031c6578451620031c9565b60205b905060005b818110156200324757620031e4816008620039a1565b86620031f1838862003975565b81518110620032045762003204620038dc565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016901c9290921791806200323e816200393a565b915050620031ce565b5090949350505050565b60008060005b610100811015620033845760008462003274576001821b62003286565b620032818260ff6200398b565b6001901b5b6004888101546040517f70ca10bb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116918101919091526024810188905260448101829052909150737109709ecfa91a80626ff3989d68f67f5b1dd12d906370ca10bb90606401600060405180830381600087803b1580156200331c57600080fd5b505af115801562003331573d6000803e3d6000fd5b50505050600080620033438962002bc6565b915091508180156200335457508015155b156200336b5760018495509550505050506200338d565b50505080806200337b906200393a565b91505062003257565b50600080915091505b935093915050565b612a408062003c6283390190565b6040518061064001604052806032906020820280368337509192915050565b508054600082559060005260206000209081019062002bc391906200341c565b508054620033f0906200383e565b6000825580601f1062003401575050565b601f01602090049060005260206000209081019062002bc391905b5b808211156200343357600081556001016200341d565b5090565b6020808252825182820181905260009190848201906040850190845b818110156200348757835173ffffffffffffffffffffffffffffffffffffffff168352928401929184019160010162003453565b50909695505050505050565b60005b83811015620034b057818101518382015260200162003496565b50506000910152565b60008151808452620034d381602086016020860162003493565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b8581101562003604577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08b85030187528251805173ffffffffffffffffffffffffffffffffffffffff1685528901518985018990528051898601819052908a0190606081881b870181019190870190855b81811015620035ed577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0898503018352620035da848651620034b9565b948e01949350918d01916001016200359d565b505050978a0197945050918801916001016200352c565b50919a9950505050505050505050565b600081518084526020808501945080840160005b83811015620036685781517fffffffff00000000000000000000000000000000000000000000000000000000168752958201959082019060010162003628565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156200370e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc089840301855281518051878552620036df88860182620034b9565b91890151858303868b0152919050620036f9818362003614565b9689019694505050908601906001016200369a565b509098975050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562003793577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088860301845262003780858351620034b9565b9450928501929085019060010162003743565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156200370e578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00185528151805173ffffffffffffffffffffffffffffffffffffffff1684528701518784018790526200382a8785018262003614565b9588019593505090860190600101620037c7565b600181811c908216806200385357607f821691505b6020821081036200388d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600060208284031215620038a657600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036200396e576200396e6200390b565b5060010190565b8082018082111562001f925762001f926200390b565b8181038181111562001f925762001f926200390b565b808202811582820484141762001f925762001f926200390b565b600082620039f2577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000825162003a0b81846020870162003493565b9190910192915050565b60006020828403121562003a2857600080fd5b815173ffffffffffffffffffffffffffffffffffffffff8116811462003a4d57600080fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8316815260406020820152600062003a856040830184620034b9565b949350505050565b6000835162003aa181846020880162003493565b9190910191825250602001919050565b600082601f83011262003ac357600080fd5b8151602067ffffffffffffffff8083111562003ae35762003ae3620038ad565b8260051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f8301168101818110848211171562003b295762003b29620038ad565b60405293845285810183019383810192508785111562003b4857600080fd5b83870191505b8482101562003b695781518352918301919083019062003b4e565b979650505050505050565b6000806040838503121562003b8857600080fd5b825167ffffffffffffffff8082111562003ba157600080fd5b62003baf8683870162003ab1565b9350602085015191508082111562003bc657600080fd5b5062003bd58582860162003ab1565b9150509250929050565b60008162003bf15762003bf16200390b565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b7fffffffff00000000000000000000000000000000000000000000000000000000831681526000825162003c5381600485016020870162003493565b91909101600401939250505056fe60e060405260016014553480156200001657600080fd5b5060405162002a4038038062002a40833981016040819052620000399162000190565b670de0b6b3a7640000841015620000885760405162461bcd60e51b815260206004820152600e60248201526d0c4c2e6caa0e4d2c6ca78628aa8960931b60448201526064015b60405180910390fd5b612710831015620000cc5760405162461bcd60e51b815260206004820152600d60248201526c0daead8e8d2e0d8d2cae47862f609b1b60448201526064016200007f565b6127108211156200010e5760405162461bcd60e51b815260206004820152600b60248201526a7061796f75743e3130302560a81b60448201526064016200007f565b6001600160a01b038116620001525760405162461bcd60e51b8152602060048201526009602482015268063726561746f723d360bc1b60448201526064016200007f565b608084905260a09290925260c0526000919091556001600255601580546001600160a01b0319166001600160a01b03909216919091179055620001e1565b60008060008060808587031215620001a757600080fd5b845160208601516040870151606088015192965090945092506001600160a01b0381168114620001d657600080fd5b939692955090935050565b60805160a05160c0516128136200022d600039600081816105b101528181611e760152611eb601526000818161036c0152611c7e015260008181610228015261220201526128136000f3fe6080604052600436106101b05760003560e01c80635b4e628b116100ec578063b3115ba61161008a578063d4c8a82a11610064578063d4c8a82a146105d3578063e04efec41461062f578063e927fc5c14610644578063f11526771461067157610204565b8063b3115ba61461054e578063ba541cef14610564578063cee6b3551461059f57610204565b806399de4a22116100c657806399de4a22146104d15780639cbe5efd146104e7578063a9c29d91146104fd578063aed161381461051357610204565b80635b4e628b146103e85780636accd0ab1461042357806391c07823146104a457610204565b8063379607f511610159578063461caa3d11610133578063461caa3d1461035a5780635236434c1461038e5780635708b4cf146103b25780635876aeec146103d257610204565b8063379607f5146103015780633b574ee21461032157806342a5bf3d1461034557610204565b8063159090bd1161018a578063159090bd146102875780632492ef591461028f578063316b9641146102e157610204565b80630561d1d21461021657806311da60b41461025d578063150a54be1461027457610204565b366102045734600360008282546101c791906122de565b90915550506003546040519081527f2ba2169cd2502a6cc4fd55f87f2dcbceef588b593aa4fdc883d4fc62e65ed6a99060200160405180910390a1005b34600360008282546101c791906122de565b34801561022257600080fd5b5061024a7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b34801561026957600080fd5b50610272610686565b005b6102726102823660046122f7565b610aa6565b6102726110f9565b34801561029b57600080fd5b506001546102bc9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610254565b3480156102ed57600080fd5b506102726102fc366004612392565b61147a565b34801561030d57600080fd5b5061027261031c3660046123b4565b6115bf565b34801561032d57600080fd5b50610336611964565b604051610254939291906123cd565b34801561035157600080fd5b5060075461024a565b34801561036657600080fd5b5061024a7f000000000000000000000000000000000000000000000000000000000000000081565b34801561039a57600080fd5b5060095460ff165b6040519015158152602001610254565b3480156103be57600080fd5b506102bc6103cd36600461245e565b611a16565b3480156103de57600080fd5b5061024a60045481565b3480156103f457600080fd5b506103a2610403366004612480565b600c60209081526000928352604080842090915290825290205460ff1681565b34801561042f57600080fd5b506005546006546007546008546009546104639473ffffffffffffffffffffffffffffffffffffffff169392919060ff1685565b6040805173ffffffffffffffffffffffffffffffffffffffff909616865260208601949094529284019190915260608301521515608082015260a001610254565b3480156104b057600080fd5b5061024a6104bf3660046123b4565b600b6020526000908152604090205481565b3480156104dd57600080fd5b5061024a60135481565b3480156104f357600080fd5b5061024a60025481565b34801561050957600080fd5b5061024a60005481565b34801561051f57600080fd5b506103a261052e366004612480565b600a60209081526000928352604080842090915290825290205460ff1681565b34801561055a57600080fd5b5061024a60035481565b34801561057057600080fd5b506103a261057f366004612480565b600f60209081526000928352604080842090915290825290205460ff1681565b3480156105ab57600080fd5b5061024a7f000000000000000000000000000000000000000000000000000000000000000081565b3480156105df57600080fd5b506106126105ee3660046123b4565b600e6020526000908152604090208054600182015460029092015490919060ff1683565b604080519384526020840192909252151590820152606001610254565b34801561063b57600080fd5b5061024a611a5b565b34801561065057600080fd5b506015546102bc9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561067d57600080fd5b50610336611a6a565b6002601454036106f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b60026014556040805160a08101825260055473ffffffffffffffffffffffffffffffffffffffff168152600654602082015260075491810191909152600854606082015260095460ff16151560808201819052610780576040517fdefc4c3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80604001514310156107be576040517ffe8e911400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604081015140806107fb576040517f1e41751d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b66470de4df820000600061080d611b52565b905060008183111561081f5781610821565b825b905080156108f457806003600082825461083b91906124ac565b9091555050604051600090339083908381818185875af1925050503d8060008114610882576040519150601f19603f3d011682016040523d82523d6000602084013e610887565b606091505b50509050806108f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6b656570657220706179206661696c656400000000000000000000000000000060448201526064016106ee565b505b50508251606080850151604080516020810187905273ffffffffffffffffffffffffffffffffffffffff9094169084015290820152600090608001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291815281516020928301206002546000908152600d9093529082205490925060321161098857506000610999565b6008610995600a846124ee565b1090505b600580547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055600060068190556007819055600855600980547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690558015610a2f578451610a0990611b7b565b6002546000908152600d6020526040902054603211610a2a57610a2a611d3c565b610a37565b610a37611d3c565b8451606080870151604080518515158152602081018790529081019190915273ffffffffffffffffffffffffffffffffffffffff909216917f70269c4de1853bd69b10c1bd439721e36732825ce14e2fbc5213febaacaaf9af910160405180910390a250506001601455505050565b600260145403610b12576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016106ee565b6002601455670de0b6b3a7640000341015610b69576040517f7c83fcf0000000000000000000000000000000000000000000000000000000008152346004820152670de0b6b3a764000060248201526044016106ee565b604080516060810182526010805473ffffffffffffffffffffffffffffffffffffffff16825260115460208301526012805460009484019190610bab90612502565b80601f0160208091040260200160405190810160405280929190818152602001828054610bd790612502565b8015610c245780601f10610bf957610100808354040283529160200191610c24565b820191906000526020600020905b815481529060010190602001808311610c0757829003601f168201915b50505091909252505081519192505073ffffffffffffffffffffffffffffffffffffffff16610dc4573460036000828254610c5f91906122de565b925050819055503460136000828254610c7891906122de565b9250508190555060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200134815260200184848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509152508051601080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90921691909117815560208201516011556040820151601290610d4490826125d3565b50506003546040519081527f2ba2169cd2502a6cc4fd55f87f2dcbceef588b593aa4fdc883d4fc62e65ed6a9915060200160405180910390a160025460405133917fbcd59d41754af57ee9503b878894bf5fdadb31acb76cb009eacf72ea6ad0822a91610db6913491889188916126ed565b60405180910390a2506110f0565b6000610dd98260200151612ee0612710612228565b905080341015610e1e576040517f7c83fcf0000000000000000000000000000000000000000000000000000000008152346004820152602481018290526044016106ee565b3460036000828254610e3091906122de565b925050819055503460136000828254610e4991906122de565b90915550506003546040519081527f2ba2169cd2502a6cc4fd55f87f2dcbceef588b593aa4fdc883d4fc62e65ed6a99060200160405180910390a1816020015160136000828254610e9a91906124ac565b9091555050602082015160038054600090610eb69084906124ac565b90915550508151602083015160405160009273ffffffffffffffffffffffffffffffffffffffff1691908381818185875af1925050503d8060008114610f18576040519150601f19603f3d011682016040523d82523d6000602084013e610f1d565b606091505b5050905080610f88576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f73706f6e736f7220726566756e64206661696c6564000000000000000000000060448201526064016106ee565b8251602080850151600254604080519283529282015273ffffffffffffffffffffffffffffffffffffffff909216917f93d8bd2b89791caf148e673fa7f739059c13c17f8c3bfc937f953be7257e8110910160405180910390a260405180606001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200134815260200186868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509152508051601080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091178155602082015160115560408201516012906110a790826125d3565b50506002546040513392507fbcd59d41754af57ee9503b878894bf5fdadb31acb76cb009eacf72ea6ad0822a916110e49134918a918a91906126ed565b60405180910390a25050505b50506001601455565b600260145403611165576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016106ee565b600260145560095460ff16156111a7576040517f3eed9ae900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002546000908152600d6020526040902054603281106111f3576040517f6c8c8d2100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6031811460008161120657600054611209565b60005b905080341461124d576040517f7c83fcf0000000000000000000000000000000000000000000000000000000008152346004820152602481018290526044016106ee565b6002546000908152600c6020908152604080832033845290915290205460ff16156112aa576002546040517f666ad0c70000000000000000000000000000000000000000000000000000000081526004016106ee91815260200190565b600280546000908152600c602090815260408083203380855290835281842080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600190811790915594548452600d8352908320805494850181558352912090910180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091179055341561138b57346003600082825461134f91906122de565b90915550506003546040519081527f2ba2169cd2502a6cc4fd55f87f2dcbceef588b593aa4fdc883d4fc62e65ed6a99060200160405180910390a15b60006113984360016122de565b6040805160a08101825233808252346020808401829052838501869052600254606080860182905260016080909601869052600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001686179055600684905560078890556008829055600980547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169096179095558551928352908201869052938101939093529293507f6c5dd09f0a96a53c958d8e8898a12d877ec2853d8e61f9cb45c0c36adaf900c9910160405180910390a2505060016014555050565b60155473ffffffffffffffffffffffffffffffffffffffff1633146114fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f6e6f742d63726561746f7200000000000000000000000000000000000000000060448201526064016106ee565b73ffffffffffffffffffffffffffffffffffffffff8116611578576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f63726561746f723d30000000000000000000000000000000000000000000000060448201526064016106ee565b601580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60026014540361162b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016106ee565b600260148190556000828152600e60209081526040918290208251606081018452815481526001820154928101929092529092015460ff1615159082018190526116a1576040517f969bf72800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000828152600a6020908152604080832033845290915290205460ff166116f4576040517f622aebc300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000828152600f6020908152604080832033845290915290205460ff1615611748576040517f646cf55800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000816020015160001461176c5760208201518251611767919061274b565b61176f565b60005b9050806000036117ab576040517f969bf72800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000838152600f60209081526040808320338452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055600454811115611859576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f7265736572766520756e646572666c6f7700000000000000000000000000000060448201526064016106ee565b806004600082825461186b91906124ac565b9091555050604051600090339083908381818185875af1925050503d80600081146118b2576040519150601f19603f3d011682016040523d82523d6000602084013e6118b7565b606091505b5050905080611922576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f636c61696d207472616e73666572206661696c6564000000000000000000000060448201526064016106ee565b604051828152849033907f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf79060200160405180910390a3505060016014555050565b601080546011546012805473ffffffffffffffffffffffffffffffffffffffff90931693919261199390612502565b80601f01602080910402602001604051908101604052809291908181526020018280546119bf90612502565b8015611a0c5780601f106119e157610100808354040283529160200191611a0c565b820191906000526020600020905b8154815290600101906020018083116119ef57829003601f168201915b5050505050905083565b600d6020528160005260406000208181548110611a3257600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff169150829050565b6000611a65611b52565b905090565b60408051606081810183526010805473ffffffffffffffffffffffffffffffffffffffff168352601154602084015260128054600095869586949093909291840191611ab590612502565b80601f0160208091040260200160405190810160405280929190818152602001828054611ae190612502565b8015611b2e5780601f10611b0357610100808354040283529160200191611b2e565b820191906000526020600020905b815481529060010190602001808311611b1157829003601f168201915b50505091909252505081516020830151604090930151909792965094509092505050565b60035460135460009190808211611b6a576000611b74565b611b7481836124ac565b9250505090565b6002546000908152600a6020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16611c3557600280546000908152600a6020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168452825280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600190811790915593548352600b90915281208054909190611c2f9084906122de565b90915550505b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316179055600054611ca5907f0000000000000000000000000000000000000000000000000000000000000000612710612228565b600081905560025460408051918252602082019290925273ffffffffffffffffffffffffffffffffffffffff8316917e40870511fcd025e35c10818502bec08721e7745dbed12dc9d96f6427581411910160405180910390a27f2ba2169cd2502a6cc4fd55f87f2dcbceef588b593aa4fdc883d4fc62e65ed6a9600354604051611d3191815260200190565b60405180910390a150565b6000611d46611b52565b905060008167016345785d8a00001115611d605781611d6a565b67016345785d8a00005b90508015611e55578060036000828254611d8491906124ac565b909155505060155460405160009173ffffffffffffffffffffffffffffffffffffffff169083908381818185875af1925050503d8060008114611de3576040519150601f19603f3d011682016040523d82523d6000602084013e611de8565b606091505b5050905080611e53576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f63726561746f7220706179206661696c6564000000000000000000000000000060448201526064016106ee565b505b6002546000908152600d6020526040812054908115801590611e97575060007f0000000000000000000000000000000000000000000000000000000000000000115b15612038576000611ea6611b52565b90508015611ee857612710611edb7f00000000000000000000000000000000000000000000000000000000000000008361275f565b611ee5919061274b565b91505b8115612036578160036000828254611f0091906124ac565b9091555060009050611f12848461274b565b90508015612034576002546000908152600d60205260408120805490915b81811015612030576000838281548110611f4c57611f4c612776565b600091825260208220015460405173ffffffffffffffffffffffffffffffffffffffff9091169187919081818185875af1925050503d8060008114611fad576040519150601f19603f3d011682016040523d82523d6000602084013e611fb2565b606091505b505090508061201d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f7061727469636970616e7420706179206661696c65640000000000000000000060448201526064016106ee565b5080612028816127a5565b915050611f30565b5050505b505b505b604080516060808201835283825260208083018681526001848601818152600280546000908152600e8652889020965187559251918601919091555193810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169415159490941790935591546003548451868152938401879052938301939093527fff9d41e1547acb5eda1e3bac0c795f57760c96016cdd641af6bdd90270a768f3910160405180910390a27f2ba2169cd2502a6cc4fd55f87f2dcbceef588b593aa4fdc883d4fc62e65ed6a960035460405161211a91815260200190565b60405180910390a16000601354118061214a575060105473ffffffffffffffffffffffffffffffffffffffff1615155b156121be5760006013819055601080547fffffffffffffffffffffffff000000000000000000000000000000000000000016815560118290559061218f601282612259565b50506002546040517f2aceb5e6de828c86a2adae4aee75a748979d2e1108b075412b068d8764aaa99090600090a25b6001600260008282546121d191906122de565b9091555050600180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905550507f00000000000000000000000000000000000000000000000000000000000000006000555050565b6000838302801561224d578260018483010381612247576122476124bf565b04612250565b60005b95945050505050565b50805461226590612502565b6000825580601f10612275575050565b601f0160209004906000526020600020908101906122939190612296565b50565b5b808211156122ab5760008155600101612297565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156122f1576122f16122af565b92915050565b6000806020838503121561230a57600080fd5b823567ffffffffffffffff8082111561232257600080fd5b818501915085601f83011261233657600080fd5b81358181111561234557600080fd5b86602082850101111561235757600080fd5b60209290920196919550909350505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461238d57600080fd5b919050565b6000602082840312156123a457600080fd5b6123ad82612369565b9392505050565b6000602082840312156123c657600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff8416815260006020848184015260606040840152835180606085015260005b8181101561241d57858101830151858201608001528201612401565b5060006080828601015260807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010192505050949350505050565b6000806040838503121561247157600080fd5b50508035926020909101359150565b6000806040838503121561249357600080fd5b823591506124a360208401612369565b90509250929050565b818103818111156122f1576122f16122af565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826124fd576124fd6124bf565b500690565b600181811c9082168061251657607f821691505b60208210810361254f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b601f8211156125ce57600081815260208120601f850160051c810160208610156125ab5750805b601f850160051c820191505b818110156125ca578281556001016125b7565b5050505b505050565b815167ffffffffffffffff8111156125ed576125ed612555565b612601816125fb8454612502565b84612584565b602080601f831160018114612654576000841561261e5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556125ca565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156126a157888601518255948401946001909101908401612682565b50858210156126dd57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b8481526060602082015282606082015282846080830137600060808483010152600060807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f860116830101905082604083015295945050505050565b60008261275a5761275a6124bf565b500490565b80820281158282048414176122f1576122f16122af565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036127d6576127d66122af565b506001019056fea2646970667358221220429fddb05ea88f414d208972bc1f41ba3f6829691dab741cb95556dab629364c64736f6c63430008130033a26469706673582212202a64d6020a00043c5bb1ed438acbbc35fedfe7fd56e4fdb666ed197f5175cb5064736f6c63430008130033",
    "sourceMap": "201:3643:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;679:354;;;:::i;:::-;;2907:134:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3823:151;;;:::i;:::-;;;;;;;:::i;3684:133::-;;;:::i;3385:141::-;;;:::i;3193:186::-;;;:::i;:::-;;;;;;;:::i;3047:140::-;;;:::i;:::-;;;;;;;:::i;3532:146::-;;;:::i;:::-;;;;;;;:::i;2754:147::-;;;:::i;2459:141::-;;;:::i;1306:195:1:-;;;:::i;:::-;;;7131:14:21;;7124:22;7106:41;;7094:2;7079:18;1306:195:1;6966:187:21;1343:2499:20;;;:::i;2606:142:6:-;;;:::i;1065:26:13:-;;;;;;;;;679:354:20;713:16;732:20;;;;;;;;;;;;;;;;;;:8;:20::i;:::-;713:39;;772:19;;;;;;;;;;;;;;;;;;:8;:19::i;:::-;762:7;;:29;;;;;;;;;;;;;;;;;;810:18;;;;;;;;;;;;;;;;;;:8;:18::i;:::-;801:6;:27;;;;;;;;;;;838:29;;;;;7379:55:21;;;838:29:20;;;7361:74:21;856:10:20;7451:18:21;;;7444:34;336:42:0;;838:7:20;;7334:18:21;;838:29:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;885:7:20;;877:19;;;;;:7;885;;;877:19;;;7361:74:21;885:7:20;7451:18:21;;;7444:34;336:42:0;;-1:-1:-1;877:7:20;;-1:-1:-1;7334:18:21;;877:19:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;914:6:20;;906:18;;;;;:7;914:6;;;906:18;;;7361:74:21;914:6:20;7451:18:21;;;7444:34;336:42:0;;-1:-1:-1;906:7:20;;-1:-1:-1;7334:18:21;;906::20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;935:18:20;;;;;7975:42:21;7963:55;;935:18:20;;;7945:74:21;336:42:0;;-1:-1:-1;935:8:20;;-1:-1:-1;7918:18:21;;935::20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1018:7:20;;970:56;;415:7;;-1:-1:-1;465:5:20;;-1:-1:-1;523:4:20;;1018:7;;;970:56;;;:::i;:::-;8261:25:21;;;8317:2;8302:18;;8295:34;;;;8360:2;8345:18;;8338:34;8420:42;8408:55;8403:2;8388:18;;8381:83;8248:3;8233:19;970:56:20;;;;;;;;;;;;;;;;;;;;;;;963:4;;:63;;;;;;;;;;;;;;;;;;703:330;679:354::o;2907:134:6:-;2954:33;3018:16;2999:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2907:134;:::o;3823:151::-;3872:42;3948:19;3926:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3823:151;:::o;3684:133::-;3730:33;3794:16;3775:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3684:133;:::o;3385:141::-;3433:35;3501:18;3480:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:141;:::o;3193:186::-;3249:56;3346:26;3317:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3047:140;3095:34;3162:18;3141:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3532:146;3580:40;3653:18;3632:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2754:147;2803:40;2876:18;2855:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2459:141;2508:34;2575:18;2554:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1306:195:1;1365:7;;1345:4;;1365:7;;1361:134;;;-1:-1:-1;1395:4:1;;1306:195::o;1361:134::-;1437:33;;;;;:7;:33;;;7361:74:21;;;1255:17:1;7451:18:21;;;7444:34;1482:1:1;;1437:7;;7334:18:21;;1437:33:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;1430:54;;1306:195;:::o;1343:2499:20:-;1410:15;1428:4;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1531:17;;;1545:2;1531:17;;;;;;;;;1410:39;;-1:-1:-1;1499:29:20;;1531:17;;;;;;;;;;;-1:-1:-1;1531:17:20;1499:49;;1563:9;1558:297;1582:2;1578:1;:6;1558:297;;;1638:24;;10028:3:21;1638:24:20;;;10016:16:21;10048:11;;;10041:27;;;1605:14:20;;1622:42;;10084:12:21;;1638:24:20;;;;;;;;;;;;1622:8;:42::i;:::-;1605:59;;1696:6;1678:12;1691:1;1678:15;;;;;;;;:::i;:::-;:24;;;;:15;;;;;;;;;:24;1716:25;;;;;7379:55:21;;;1716:25:20;;;7361:74:21;1732:8:20;7451:18:21;;;7444:34;336:42:0;;1716:7:20;;7334:18:21;;1716:25:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1755:16:20;;;;;7975:42:21;7963:55;;1755:16:20;;;7945:74:21;336:42:0;;-1:-1:-1;1755:8:20;;-1:-1:-1;7918:18:21;;1755:16:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1785:4;;;;;;;;;;;:9;;;415:7;1785:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1829:15;:13;:15::i;:::-;-1:-1:-1;1586:3:20;;;;:::i;:::-;;;;1558:297;;;;1917:39;1926:4;;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1947:8;1917;:39::i;:::-;2010:11;2024:15;;;;;;;;;;;;;;;;;;:8;:15::i;:::-;2010:29;;2068:3;2049:12;2062:2;2049:16;;;;;;;;:::i;:::-;:22;;;;:16;;;;;;;;;:22;2081;;;;;7379:55:21;;;2081:22:20;;;7361:74:21;2094:8:20;7451:18:21;;;7444:34;336:42:0;;2081:7:20;;7334:18:21;;2081:22:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2113:13:20;;;;;7975:42:21;7963:55;;2113:13:20;;;7945:74:21;336:42:0;;-1:-1:-1;2113:8:20;;-1:-1:-1;7918:18:21;;2113:13:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2136:4;;;;;;;;;;;:9;;;2153:1;2136:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2240:7:20;;;;:15;;-1:-1:-1;2265:33:20;;-1:-1:-1;2265:33:20;;-1:-1:-1;2265:33:20:i;:::-;2313:9;2308:101;2332:2;2328:1;:6;2308:101;;;2375:12;2388:1;2375:15;;;;;;;;:::i;:::-;;;;;;;:23;;;2355:14;2370:1;2355:17;;;;;;;:::i;:::-;;;;:43;2336:3;;;;:::i;:::-;;;;2308:101;;;-1:-1:-1;336:42:0;2468:7:20;2476:16;:12;2491:1;2476:16;:::i;:::-;2468:25;;;;;;;;;;;;;11290::21;;11278:2;11263:18;;11144:177;2468:25:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2529:6:20;;2553:16;;;;;2529:6;;;;2553:16;;;7945:74:21;;;2529:14:20;;-1:-1:-1;336:42:0;;-1:-1:-1;2553:8:20;;7918:18:21;;2553:16:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2579:4;;;;;;;;;;;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2645:6:20;;2636:57;;-1:-1:-1;2645:32:20;;-1:-1:-1;2662:15:20;;2645:6;;:14;:32;:::i;:::-;582:4;2636:8;:57::i;:::-;2752:44;2761:4;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2784:11;:7;2794:1;2784:11;:::i;:::-;2752:8;:44::i;:::-;2806:63;2815:4;;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2844:4;;;;;;;;;;;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2806:63::-;2972:22;3025:24;582:4;3025:8;:24;:::i;:::-;2972:82;;3064:18;3102:1;3085:14;:18;:87;;3171:1;3085:87;;;3122:14;649:4;3107:29;;:60;;3153:14;3107:60;;;649:4;3107:60;3064:108;-1:-1:-1;3182:23:20;3208:27;3064:108;3208:14;:27;:::i;:::-;3182:53;-1:-1:-1;3245:18:20;3299:5;3267:28;523:4;3182:53;3267:28;:::i;:::-;3266:38;;;;:::i;:::-;3245:59;-1:-1:-1;3321:16:20;3340:15;3353:2;3245:59;3340:15;:::i;:::-;3409:7;;3321:34;;-1:-1:-1;3400:56:20;;3409:34;;3427:16;;3409:7;;:15;:34;:::i;:::-;3445:10;3400:8;:56::i;:::-;3530:10;3525:126;3551:2;3546;:7;3525:126;;;3575:65;3611:14;3626:2;3611:18;;;;;;;:::i;:::-;;;;;3584:12;3597:2;3584:16;;;;;;;;:::i;:::-;;;;;;;:24;;;:45;;;;:::i;:::-;3631:8;3575;:65::i;:::-;3555:4;;;;:::i;:::-;;;;3525:126;;;-1:-1:-1;3721:25:20;3749:28;3767:10;3749:15;:28;:::i;:::-;3721:56;;3787:48;3796:4;;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3817:17;3787:8;:48::i;:::-;1400:2442;;;;;;;;;;;;1343:2499::o;2606:142:6:-;2655:35;2723:18;2702:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2606:142;:::o;20760:125:3:-;20824:12;20858:20;20873:4;20858:14;:20::i;:::-;-1:-1:-1;20848:30:3;20760:125;-1:-1:-1;;20760:125:3:o;1039:192:20:-;1083:12;1098:57;:50;;;;;;;;;;;;;;;;;;:30;1122:4;;;;;;;;;;;1098:8;:15;;:30;;;;:::i;:::-;:34;;:50::i;:::-;:55;:57::i;:::-;1182:4;;1165:59;;;;;1182:4;;;;1165:8;1182:4;1165:59;;;12113:74:21;12203:18;;;12196:34;;;-1:-1:-1;12246:18:21;;;12239:34;12196;;-1:-1:-1;336:42:0;;1165:8:20;;12086:18:21;;1165:59:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1073:158;1039:192::o;2664:153:1:-;2755:5;2747:4;:13;2743:68;;2776:24;;;;;;;;12458:25:21;;;12499:18;;;12492:34;;;2776:11:1;;;;12431:18:21;;2776:24:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2743:68;2664:153;;:::o;20479:242:3:-;20549:12;20563:18;20641:4;20624:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;20614:33;;20624:22;20614:33;;;;20665:19;;;;;;11290:25:21;;;20614:33:3;-1:-1:-1;20665:7:3;;;;11263:18:21;;20665:19:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20694:20;;;;;20658:26;;-1:-1:-1;20694:8:3;;;;:20;;20658:26;;20709:4;;20694:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20479:242;;;:::o;13254:156:9:-;6849:12;;;:22;;;;;;;;;;-1:-1:-1;6849:12:9;13367:36;13360:43;;13254:156;;;;;:::o;13565:150::-;915:24;;;;;;7160:9;;;:22;;;;;;;;;;;;;;;13641:18;13697:4;13678:30;7054:156;12995:106;13052:7;13078:16;13083:4;13089;13177:7;13203:33;13223:4;13229:6;13203:19;:33::i;:::-;:38;;13107:141;-1:-1:-1;;;13107:141:9:o;4245:2492::-;4357:12;;;;4393:9;;;;4434:11;;;;4315:16;;4357:12;;;4393:9;;;4315:16;4477:19;4357:4;4477:13;:19::i;:::-;4547:15;;;:10;:15;;;;;;;;;;;:21;;;;;;;;;;4579:37;;4455:41;;-1:-1:-1;4547:21:9;4579:37;;4455:41;;4604:11;;4579:37;;:::i;:::-;;;;;;;;;;;;;;4569:48;;4579:37;4569:48;;;;4547:71;;;;;;;;;;-1:-1:-1;4547:71:9;:77;;;;;4543:255;;;4644:6;4640:56;;;4670:11;4676:4;4670:5;:11::i;:::-;4716:15;;;:10;:15;;;;;;;;;;;:21;;;;;;;;;;4748:37;;4716:21;;:10;4748:37;;4765:6;;4773:11;;4748:37;;:::i;:::-;;;;;;;;;;;;;4738:48;;;;;;4716:71;;;;;;;;;;;4709:78;;;;;;;;4543:255;670:28;662:37;;4807:9;;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4831:18;4853:16;4864:4;4853:10;:16::i;:::-;4907:25;;;;;7975:42:21;7963:55;;4907:25:9;;;7945:74:21;4828:41:9;;-1:-1:-1;4880:22:9;;-1:-1:-1;4907:11:9;;;;7918:18:21;;4907:25:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4879:53;;;4947:5;:12;4963:1;4947:17;4943:1460;;4980:74;;;;;;15666:2:21;4980:74:9;;;15648:21:21;15685:18;;;15678:30;;;;15744:34;15724:18;;;15717:62;15815:34;15795:18;;;15788:62;15867:19;;4980:74:9;;;;;;;;4943:1460;5102:12;;5085:1308;5123:1;5116:3;;;:::i;:::-;;;;:8;5085:1308;;5145:12;670:28;662:37;;5160:7;;;5168:3;5173:5;5179:1;5173:8;;;;;;;;:::i;:::-;;;;;;;5160:22;;;;;;;;;;;;;;;7391:42:21;7379:55;;;;7361:74;;7466:2;7451:18;;7444:34;7349:2;7334:18;;7158:326;5160:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5145:37;-1:-1:-1;5145:37:9;5200:114;;5251:44;5272:3;5285:5;5291:1;5285:8;;;;;;;;:::i;:::-;;;;;;;;;;;;5251:44;;;7391:42:21;7379:55;;;7361:74;;7451:18;;;7444:34;7334:18;5251:44:9;;;;;;;5200:114;5337:36;5358:4;5364:5;5370:1;5364:8;;;;;;;;:::i;:::-;;;;;;;5337:20;:36::i;:::-;5332:92;;5397:8;5085:1308;;5332:92;5515:25;;;;5443:18;;;;5515:25;;5511:256;;;5564:10;5631:27;5643:4;5649:5;5655:1;5649:8;;;;;;;;:::i;:::-;;;;;;;5631:11;:27::i;:::-;5596:62;;-1:-1:-1;5596:62:9;-1:-1:-1;5596:62:9;-1:-1:-1;5596:62:9;5680:69;;5718:8;;;;5085:1308;;5680:69;5542:225;5511:256;12370:1;12335:28;;;12330:3;12326:38;12322:46;12318:54;;12301:72;;5897:57;;5896:74;;5993:29;;;5989:84;;6046:8;;;;5085:1308;;5989:84;6096:89;6106:3;6111:4;6144:6;6152:11;6127:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6117:48;;;;;;6175:5;6181:1;6175:8;;;;;;;;:::i;:::-;;;;;;;;;;;;6096:89;;;16659:42:21;16647:55;;;16629:74;;16751:66;16739:79;;;16719:18;;;16712:107;;;;16835:18;;;16828:34;16893:2;16878:18;;16871:34;16616:3;16601:19;6096:89:9;;;;;;;6297:58;;;;;;;;6314:5;6320:1;6314:8;;;;;;;;:::i;:::-;;;;;;;6306:17;;6297:58;;;;6325:10;6297:58;;;;6337:11;6297:58;;;;6350:4;6297:58;;;;;6203:4;:10;;:15;6214:3;6203:15;;;;;;;;;;;;;;;:21;6219:4;6203:21;;;;;;;;;;;;;;;;;:71;6252:6;6260:11;6235:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;6225:48;;6235:37;6225:48;;;;6203:71;;;;;;;;;;;;-1:-1:-1;6203:71:9;:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;5085:1308:9;;6434:15;;;:10;:15;;;;;;;;;;;:21;;;;;;;;;;6466:37;;6434:21;;:10;6466:37;;6483:6;;6491:11;;6466:37;;:::i;:::-;;;;;;;;;;;;;;6456:48;;6466:37;6456:48;;;;6434:71;;;;;;;;;;-1:-1:-1;6434:71:9;:77;;;;;6413:171;;;;;;;17118:2:21;6413:171:9;;;17100:21:21;17157:2;17137:18;;;17130:30;17196:34;17176:18;;;17169:62;17267:17;17247:18;;;17240:45;17302:19;;6413:171:9;16916:411:21;6413:171:9;6599:6;6595:48;;;6621:11;6627:4;6621:5;:11::i;:::-;6659:15;;;:10;:15;;;;;;;;;;;:21;;;;;;;;;;6691:37;;6659:21;;:10;6691:37;;6708:6;;6716:11;;6691:37;;:::i;:::-;;;;;;;;;;;;;6681:48;;;;;;6659:71;;;;;;;;;;;6652:78;;;;;;;;4245:2492;;;;:::o;953:236::-;1024:12;1052:4;:14;;:21;;;;;:::i;:::-;;;1077:1;1052:26;1048:135;;1101:19;1109:4;:10;;1101:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;:19::i;1048:135::-;1158:4;:14;;1151:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;953:236;;;:::o;11581:239::-;11647:12;;;11640:19;;;;;;11676:9;;;11669:16;;;;;;11695:17;11640:19;11702:10;;11647:12;11695:17;:::i;:::-;11722:18;11729:11;;;11722:18;;;11757:25;;;11750:32;;;;;;11792:21;;11799:14;;;;11792:21;:::i;:::-;11581:239;:::o;1251:339::-;1379:9;;;;1319:4;;;;;;1379:9;;1390:19;1379:4;1390:13;:19::i;:::-;1362:48;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;1456:12;;;;1362:48;;-1:-1:-1;1421:12:9;;;;1456;;;:27;;1362:48;;1456:27;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1420:63;;;;1493:14;1510:38;1525:4;1536;:11;;;1531:2;:16;;;;:::i;:::-;1510:14;:38::i;:::-;1567:7;;1493:55;;-1:-1:-1;1251:339:9;;-1:-1:-1;;;;;1251:339:9:o;1847:546::-;1982:12;;;;;1974:27;;;;;:7;1982:12;;;1974:27;;;7361:74:21;;;;7451:18;;;7444:34;;;1934:4:9;;;;1974:7;;;;7334:18:21;;1974:27:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1950:51;;2012:12;2026:23;2053:16;2064:4;2053:10;:16::i;:::-;2011:58;;-1:-1:-1;2011:58:9;-1:-1:-1;2080:15:9;2098:29;;:65;;2161:1;2098:65;;;739:78;2098:65;2182:12;;;;;2173:37;;;;;:8;2182:12;;;2173:37;;;12113:74:21;;;;12203:18;;;12196:34;;;12246:18;;;12239:34;;;2080:83:9;;-1:-1:-1;2173:8:9;;;;12086:18:21;;2173:37:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2224:22;2250:16;2261:4;2250:10;:16::i;:::-;2286:12;;;;;2277:43;;;;;:8;2286:12;;;2277:43;;;12113:74:21;;;;12203:18;;;12196:34;;;12246:18;;;12239:34;;;2221:45:9;;-1:-1:-1;2277:8:9;;-1:-1:-1;2277:8:9;;12086:18:21;;2277:43:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2339:7;:46;;;;;2370:14;2351:15;:33;;2339:46;2331:55;1847:546;-1:-1:-1;;;;;;;;1847:546:9:o;3076:534::-;3220:12;;;;;3212:27;;;;;:7;3220:12;;;3212:27;;;7361:74:21;;;;7451:18;;;7444:34;;;3154:4:9;;;;;;;;3212:7;;;;7334:18:21;;3212:27:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3188:51;;3251:14;3267:18;3289:28;3300:4;3306;3312;3289:10;:28::i;:::-;3250:67;;;;3328:15;3345:19;3368:29;3379:4;3385;3391:5;3368:10;:29::i;:::-;3502:12;;;;;3493:43;;;;;:8;3502:12;;;3493:43;;;12113:74:21;;;;12203:18;;;12196:34;;;12246:18;;;12239:34;;;3327:70:9;;-1:-1:-1;3327:70:9;-1:-1:-1;3493:8:9;;;;12086:18:21;;3493:43:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3554:9;:23;;;;;3567:10;3554:23;3546:57;3579:10;;-1:-1:-1;3579:10:9;-1:-1:-1;3076:534:9;;-1:-1:-1;;;;;;3076:534:9:o;11182:393::-;11241:12;11265:19;11297:1;:8;11308:2;11297:13;;;;:::i;:::-;11287:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11287:24:9;;11265:46;;11326:9;11321:224;11345:1;:8;11341:1;:12;11321:224;;;11374:9;11386:1;11388;11386:4;;;;;;;;:::i;:::-;;;;;;;11374:16;;11519:1;11513;11509:2;11505:10;11501:2;11497:19;11489:6;11485:32;11478:43;11460:75;11355:3;;;;;:::i;:::-;;;;11321:224;;10872:304;10950:7;10969:11;10991;11016:2;11005:1;:8;:13;:29;;11026:1;:8;11005:29;;;11021:2;11005:29;10991:43;;11049:9;11044:106;11068:3;11064:1;:7;11044:106;;;11133:5;:1;11137;11133:5;:::i;:::-;11107:1;11109:10;11118:1;11109:6;:10;:::i;:::-;11107:13;;;;;;;;:::i;:::-;;;;;;;11099:40;;11092:47;;;;;11073:3;;;;:::i;:::-;;;;11044:106;;;-1:-1:-1;11166:3:9;;10872:304;-1:-1:-1;;;;10872:304:9:o;2556:514::-;2644:4;2650:7;2674:14;2669:368;2703:3;2694:6;:12;2669:368;;;2732:18;2753:4;:44;;2785:1;:11;;2753:44;;;2767:12;2773:6;2767:3;:12;:::i;:::-;2761:1;:19;;2753:44;2820:12;;;;;2811:49;;;;;:8;2820:12;;;2811:49;;;12113:74:21;;;;12203:18;;;12196:34;;;12246:18;;;12239:34;;;2732:65:9;;-1:-1:-1;2811:8:9;;;;12086:18:21;;2811:49:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2876:12;2890;2906:16;2917:4;2906:10;:16::i;:::-;2875:47;;;;2941:7;:30;;;;-1:-1:-1;2953:17:9;;;2941:30;2937:90;;;2999:4;3005:6;2991:21;;;;;;;;;;2937:90;2718:319;;;2708:8;;;;;:::i;:::-;;;;2669:368;;;;3054:5;3061:1;3046:17;;;;2556:514;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:681:21:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:218;465:6;462:1;459:13;451:218;;;530:13;;545:42;526:62;514:75;;644:15;;;;609:12;;;;487:1;480:9;451:218;;;-1:-1:-1;686:3:21;;14:681;-1:-1:-1;;;;;;14:681:21:o;700:250::-;785:1;795:113;809:6;806:1;803:13;795:113;;;885:11;;;879:18;866:11;;;859:39;831:2;824:10;795:113;;;-1:-1:-1;;942:1:21;924:16;;917:27;700:250::o;955:330::-;997:3;1035:5;1029:12;1062:6;1057:3;1050:19;1078:76;1147:6;1140:4;1135:3;1131:14;1124:4;1117:5;1113:16;1078:76;:::i;:::-;1199:2;1187:15;1204:66;1183:88;1174:98;;;;1274:4;1170:109;;955:330;-1:-1:-1;;955:330:21:o;1290:1883::-;1523:2;1575:21;;;1645:13;;1548:18;;;1667:22;;;1494:4;;1523:2;1708;;1726:18;;;;1763:1;1806:15;;;1791:31;;1787:40;;1850:15;;;1494:4;;1914:1230;1930:6;1925:3;1922:15;1914:1230;;;2023:66;1999:22;;;1995:95;1983:108;;2114:13;;2201:9;;2212:42;2197:58;2182:74;;2295:11;;2289:18;2327:15;;;2320:27;;;2408:19;;2154:15;;;2440:24;;;2621:21;;;;2487:2;2569:17;;;2557:30;;2553:39;;;2511:15;;;;2666:1;2680:355;2696:8;2691:3;2688:17;2680:355;;;2798:66;2789:6;2781;2777:19;2773:92;2766:5;2759:107;2893:42;2928:6;2917:8;2911:15;2893:42;:::i;:::-;2964:17;;;;2883:52;-1:-1:-1;3007:14:21;;;;2724:1;2715:11;2680:355;;;-1:-1:-1;;;3122:12:21;;;;3058:6;-1:-1:-1;;3087:15:21;;;;1956:1;1947:11;1914:1230;;;-1:-1:-1;3161:6:21;;1290:1883;-1:-1:-1;;;;;;;;;;1290:1883:21:o;3178:507::-;3230:3;3268:5;3262:12;3295:6;3290:3;3283:19;3321:4;3350:2;3345:3;3341:12;3334:19;;3387:2;3380:5;3376:14;3408:1;3418:242;3432:6;3429:1;3426:13;3418:242;;;3497:13;;3512:66;3493:86;3481:99;;3600:12;;;;3635:15;;;;3454:1;3447:9;3418:242;;;-1:-1:-1;3676:3:21;;3178:507;-1:-1:-1;;;;;3178:507:21:o;3690:1244::-;3908:4;3937:2;3977;3966:9;3962:18;4007:2;3996:9;3989:21;4030:6;4065;4059:13;4096:6;4088;4081:22;4122:2;4112:12;;4155:2;4144:9;4140:18;4133:25;;4217:2;4207:6;4204:1;4200:14;4189:9;4185:30;4181:39;4255:2;4247:6;4243:15;4276:1;4286:619;4300:6;4297:1;4294:13;4286:619;;;4389:66;4377:9;4369:6;4365:22;4361:95;4356:3;4349:108;4486:6;4480:13;4532:2;4526:9;4563:2;4555:6;4548:18;4593:48;4637:2;4629:6;4625:15;4611:12;4593:48;:::i;:::-;4682:11;;;4676:18;4731:19;;;4714:15;;;4707:44;4676:18;4579:62;-1:-1:-1;4774:51:21;4579:62;4676:18;4774:51;:::i;:::-;4883:12;;;;4764:61;-1:-1:-1;;;4848:15:21;;;;4322:1;4315:9;4286:619;;;-1:-1:-1;4922:6:21;;3690:1244;-1:-1:-1;;;;;;;;3690:1244:21:o;4939:862::-;5101:4;5130:2;5170;5159:9;5155:18;5200:2;5189:9;5182:21;5223:6;5258;5252:13;5289:6;5281;5274:22;5327:2;5316:9;5312:18;5305:25;;5389:2;5379:6;5376:1;5372:14;5361:9;5357:30;5353:39;5339:53;;5427:2;5419:6;5415:15;5448:1;5458:314;5472:6;5469:1;5466:13;5458:314;;;5561:66;5549:9;5541:6;5537:22;5533:95;5528:3;5521:108;5652:40;5685:6;5676;5670:13;5652:40;:::i;:::-;5642:50;-1:-1:-1;5750:12:21;;;;5715:15;;;;5494:1;5487:9;5458:314;;;-1:-1:-1;5789:6:21;;4939:862;-1:-1:-1;;;;;;;4939:862:21:o;5806:1155::-;6008:4;6037:2;6077;6066:9;6062:18;6107:2;6096:9;6089:21;6130:6;6165;6159:13;6196:6;6188;6181:22;6222:2;6212:12;;6255:2;6244:9;6240:18;6233:25;;6317:2;6307:6;6304:1;6300:14;6289:9;6285:30;6281:39;6355:2;6347:6;6343:15;6376:1;6386:546;6400:6;6397:1;6394:13;6386:546;;;6465:22;;;6489:66;6461:95;6449:108;;6580:13;;6625:9;;6636:42;6621:58;6606:74;;6719:11;;6713:18;6751:15;;;6744:27;;;6794:58;6836:15;;;6713:18;6794:58;:::i;:::-;6910:12;;;;6784:68;-1:-1:-1;;6875:15:21;;;;6422:1;6415:9;6386:546;;8475:437;8554:1;8550:12;;;;8597;;;8618:61;;8672:4;8664:6;8660:17;8650:27;;8618:61;8725:2;8717:6;8714:14;8694:18;8691:38;8688:218;;8762:77;8759:1;8752:88;8863:4;8860:1;8853:15;8891:4;8888:1;8881:15;8688:218;;8475:437;;;:::o;9219:184::-;9289:6;9342:2;9330:9;9321:7;9317:23;9313:32;9310:52;;;9358:1;9355;9348:12;9310:52;-1:-1:-1;9381:16:21;;9219:184;-1:-1:-1;9219:184:21:o;9597:::-;9649:77;9646:1;9639:88;9746:4;9743:1;9736:15;9770:4;9767:1;9760:15;10107:184;10159:77;10156:1;10149:88;10256:4;10253:1;10246:15;10280:4;10277:1;10270:15;10625:184;10677:77;10674:1;10667:88;10774:4;10771:1;10764:15;10798:4;10795:1;10788:15;10814:195;10853:3;10884:66;10877:5;10874:77;10871:103;;10954:18;;:::i;:::-;-1:-1:-1;11001:1:21;10990:13;;10814:195::o;11014:125::-;11079:9;;;11100:10;;;11097:36;;;11113:18;;:::i;11326:128::-;11393:9;;;11414:11;;;11411:37;;;11428:18;;:::i;11459:168::-;11532:9;;;11563;;11580:15;;;11574:22;;11560:37;11550:71;;11601:18;;:::i;11632:274::-;11672:1;11698;11688:189;;11733:77;11730:1;11723:88;11834:4;11831:1;11824:15;11862:4;11859:1;11852:15;11688:189;-1:-1:-1;11891:9:21;;11632:274::o;12537:289::-;12668:3;12706:6;12700:13;12722:66;12781:6;12776:3;12769:4;12761:6;12757:17;12722:66;:::i;:::-;12804:16;;;;;12537:289;-1:-1:-1;;12537:289:21:o;12831:313::-;12901:6;12954:2;12942:9;12933:7;12929:23;12925:32;12922:52;;;12970:1;12967;12960:12;12922:52;13002:9;12996:16;13052:42;13045:5;13041:54;13034:5;13031:65;13021:93;;13110:1;13107;13100:12;13021:93;13133:5;12831:313;-1:-1:-1;;;12831:313:21:o;13149:340::-;13338:42;13330:6;13326:55;13315:9;13308:74;13418:2;13413;13402:9;13398:18;13391:30;13289:4;13438:45;13479:2;13468:9;13464:18;13456:6;13438:45;:::i;:::-;13430:53;13149:340;-1:-1:-1;;;;13149:340:21:o;13494:383::-;13651:3;13689:6;13683:13;13705:66;13764:6;13759:3;13752:4;13744:6;13740:17;13705:66;:::i;:::-;13793:16;;;;13818:21;;;-1:-1:-1;13866:4:21;13855:16;;13494:383;-1:-1:-1;13494:383:21:o;13882:958::-;13947:5;14000:3;13993:4;13985:6;13981:17;13977:27;13967:55;;14018:1;14015;14008:12;13967:55;14047:6;14041:13;14073:4;14096:18;14133:2;14129;14126:10;14123:36;;;14139:18;;:::i;:::-;14185:2;14182:1;14178:10;14217:2;14211:9;14276:66;14271:2;14267;14263:11;14259:84;14251:6;14247:97;14394:6;14382:10;14379:22;14374:2;14362:10;14359:18;14356:46;14353:72;;;14405:18;;:::i;:::-;14441:2;14434:22;14491:18;;;14567:15;;;14563:24;;;14525:15;;;;-1:-1:-1;14599:15:21;;;14596:35;;;14627:1;14624;14617:12;14596:35;14663:2;14655:6;14651:15;14640:26;;14675:135;14691:6;14686:3;14683:15;14675:135;;;14757:10;;14745:23;;14788:12;;;;14708;;;;14675:135;;;14828:6;13882:958;-1:-1:-1;;;;;;;13882:958:21:o;14845:614::-;14974:6;14982;15035:2;15023:9;15014:7;15010:23;15006:32;15003:52;;;15051:1;15048;15041:12;15003:52;15084:9;15078:16;15113:18;15154:2;15146:6;15143:14;15140:34;;;15170:1;15167;15160:12;15140:34;15193:72;15257:7;15248:6;15237:9;15233:22;15193:72;:::i;:::-;15183:82;;15311:2;15300:9;15296:18;15290:25;15274:41;;15340:2;15330:8;15327:16;15324:36;;;15356:1;15353;15346:12;15324:36;;15379:74;15445:7;15434:8;15423:9;15419:24;15379:74;:::i;:::-;15369:84;;;14845:614;;;;;:::o;15897:196::-;15936:3;15964:5;15954:39;;15973:18;;:::i;:::-;-1:-1:-1;16020:66:21;16009:78;;15897:196::o;17332:430::-;17529:66;17521:6;17517:79;17512:3;17505:92;17487:3;17626:6;17620:13;17642:74;17709:6;17705:1;17700:3;17696:11;17689:4;17681:6;17677:17;17642:74;:::i;:::-;17736:16;;;;17754:1;17732:24;;17332:430;-1:-1:-1;;;17332:430:21:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSelectors()": "b0464fdc",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testFullRoundForcedLossAndDistribution()": "d095712e"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"excludedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzArtifactSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFullRoundForcedLossAndDistribution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"testFullRoundForcedLossAndDistribution()\":{\"notice\":\"End-to-end full round: 49 paid entries + 50th free triggers forced loss and distributions\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/HotPotato.Integration.t.sol\":\"HotPotatoIntegrationTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0xa3735a6618a3014e42bb4329ad143e3b2c59cd95094350202e4c4a06c9d585dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eef9db48d94726ec3d3fa3a84a8d520903705190f7ee7a04a065335a6aeeac4d\",\"dweb:/ipfs/QmSWmNny7TkzyqRPjGdpERAJuBwwznrGPLUqS4DZy5fX5z\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xd8eec16034b53b52c90a3d720e121ce7d30d64cc57d854db7d817d5b382dda43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://612780755e32668c7e3b747d94d16c7291101144e084dd9ee563f071711e99e3\",\"dweb:/ipfs/QmQgtFJXEmDtSHT7tZQTMbb6PCDpq5UDYFvrBnWk1Xo2SY\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xd3edaf57db178f839d97ccee0009c2b7b20f78c2adca9028a6013acb8d5b4c5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f17329ac1d25d3e6657ca240dee0a3f9b2cf22a64a05b87dac15252dee74351\",\"dweb:/ipfs/QmPHxkEwgVpQNbU52s58RmmegrkYGj8bNKTVSW8rZm3dBm\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0fa6ec03602648b62cce41aab2096e6b7e052f2846075d967b6958dd586db746\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd84e2ca9c1eaed6b76768cc12bb8c1af8289170ea8b7706f58d516460d79c41\",\"dweb:/ipfs/QmQ7BK7co6DE4eWUqMyv11s5eHYkS1tyx8tDSZGZVtf2aK\"]},\"lib/forge-std/src/StdConstants.sol\":{\"keccak256\":\"0x319ccdabfa2c0b2428301445873270ffea20f0e039d4fd5e6eeba65158e4e534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b633f9d3a719e1d035ce7daa6cc051ddf89a72d34200d14cec37728e245cdabc\",\"dweb:/ipfs/QmRP7HQJpHMx1CsFrY8tXVVx1DQmi2dcb2BoGfiWaA923r\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391\",\"dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0xbc0132abe1c2accc2867c0f03667afffdf92f3e95a581bb03c9557eaa38ea500\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb6fab37dc73c219cfbb7b4f4998bcf7677ca5397a867e850f40232192073974\",\"dweb:/ipfs/QmUHsbVdp9SKmgek7ZfPcLTKrpZFXpqaqt4sVejzxGEQL3\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x04102de0a79398e4bdea57b7a4818655b4cc66d6f81d1cff08bf428cd0b384cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53edc6c8f7f67cafc0129f039637c77d979880f7f1947defea31e8f0c05095bc\",\"dweb:/ipfs/QmUKXJd1vFCkxxrkXNLURdXrx2apoyWQFrFb5UqNkjdHVi\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdToml.sol\":{\"keccak256\":\"0x58a72c765ed3f7ff6b105509689658795b8a3739b8931772a497155878381861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4a3746f4fabaeb980bd77d9e091d3904ee38a6c0e191bfa8ba6874c6f8558a3\",\"dweb:/ipfs/QmUfFDMEn461FgGEXt5HicyGD54sc28sLaQ9JRWDMBKed8\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xb2469a902a326074034c4f7081d868113db0edbb7cf48b86528af2d6b07295f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1430a81c4978be875e2a3b31a8bfa4e1438fecd327f23771b690d64db63c020a\",\"dweb:/ipfs/QmW6aB2u1LNaRgGQFwjV7L7UbxsRg63iJ7AuujPouEa4cT\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x3dda6083a83dfa3e8526e97bcc28e862ee2442dd58fe94d5c426d65b8e38f73c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33f8c02e4dabdab86a6825125856446a8657eacd712318b51b7818e4a6f6e3f4\",\"dweb:/ipfs/QmRKSjVnrk54yr8wTK2e6QxRjiuba2H8HJSKunHAkdo7RG\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xe2b159412b06b44a7f90972104300c587f308506d37d2143dd7e689e2eac6f01\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://a96e13ac6fec3ffe61a55d6005ef0ef96f47adf3f4f3531e0418f0bf02d3f93c\",\"dweb:/ipfs/QmeFci69gm7a6c6pEqSNoe3HfXPVPiagUc51Pyo5PoS8Rn\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x4bbf47eb762cef93729d6ef15e78789957147039b113e5d4df48e3d3fd16d0f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af9e3a7c3d82fb5b10b57ca4d1a82f2acbef80c077f6f6ef0cc0187c7bfd9f57\",\"dweb:/ipfs/QmR9VzmnBDJpgiDP6CHT6truehukF9HpYvuP6kRiJbDwPP\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbef9786cb49d3eade757bad87568c49c8c8f35721f0193c95ffb055d9e466e11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bafd2b0b2d28068d329f95ea8a1fbce3719c257fcb863fc01abcbafd8d531ab\",\"dweb:/ipfs/QmUeaFjKWTVDBsHVfSob4mwt6A5hTnKDz22HaUXeZhypa3\"]},\"src/HotPotato.sol\":{\"keccak256\":\"0xc8dd50c4ed50a0fb5f750561dd23588d8b3d75d9cfdfcd46f6527f42f37dbd71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9aeaeed2880ed94a6d0ddfed13f6a218e56788ef70f9ac35b277d578315e91d\",\"dweb:/ipfs/QmWCcxnwC1xiXHzrkhFeCTHgRSZyJnPi1XUUHuLgAHw8se\"]},\"test/HotPotato.Integration.t.sol\":{\"keccak256\":\"0x92933619497885406094987dfb28cf9de54e052ae73e819d4a5968943fd89661\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://406cf9d1a47623ae84a06300cf3a5a6015fd10500cd711d6e9d56b627b1d74ec\",\"dweb:/ipfs/QmTGp6LaKQ2UvL9J1ySV4g7RMXo4voU1MPWjvr4GGcNHMX\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "excludedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "string",
                  "name": "artifact",
                  "type": "string"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFullRoundForcedLossAndDistribution"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "testFullRoundForcedLossAndDistribution()": {
            "notice": "End-to-end full round: 49 paid entries + 50th free triggers forced loss and distributions"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/HotPotato.Integration.t.sol": "HotPotatoIntegrationTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0xa3735a6618a3014e42bb4329ad143e3b2c59cd95094350202e4c4a06c9d585dd",
        "urls": [
          "bzz-raw://eef9db48d94726ec3d3fa3a84a8d520903705190f7ee7a04a065335a6aeeac4d",
          "dweb:/ipfs/QmSWmNny7TkzyqRPjGdpERAJuBwwznrGPLUqS4DZy5fX5z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xd8eec16034b53b52c90a3d720e121ce7d30d64cc57d854db7d817d5b382dda43",
        "urls": [
          "bzz-raw://612780755e32668c7e3b747d94d16c7291101144e084dd9ee563f071711e99e3",
          "dweb:/ipfs/QmQgtFJXEmDtSHT7tZQTMbb6PCDpq5UDYFvrBnWk1Xo2SY"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xd3edaf57db178f839d97ccee0009c2b7b20f78c2adca9028a6013acb8d5b4c5e",
        "urls": [
          "bzz-raw://0f17329ac1d25d3e6657ca240dee0a3f9b2cf22a64a05b87dac15252dee74351",
          "dweb:/ipfs/QmPHxkEwgVpQNbU52s58RmmegrkYGj8bNKTVSW8rZm3dBm"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x0fa6ec03602648b62cce41aab2096e6b7e052f2846075d967b6958dd586db746",
        "urls": [
          "bzz-raw://cd84e2ca9c1eaed6b76768cc12bb8c1af8289170ea8b7706f58d516460d79c41",
          "dweb:/ipfs/QmQ7BK7co6DE4eWUqMyv11s5eHYkS1tyx8tDSZGZVtf2aK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdConstants.sol": {
        "keccak256": "0x319ccdabfa2c0b2428301445873270ffea20f0e039d4fd5e6eeba65158e4e534",
        "urls": [
          "bzz-raw://b633f9d3a719e1d035ce7daa6cc051ddf89a72d34200d14cec37728e245cdabc",
          "dweb:/ipfs/QmRP7HQJpHMx1CsFrY8tXVVx1DQmi2dcb2BoGfiWaA923r"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d",
        "urls": [
          "bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391",
          "dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0xbc0132abe1c2accc2867c0f03667afffdf92f3e95a581bb03c9557eaa38ea500",
        "urls": [
          "bzz-raw://eb6fab37dc73c219cfbb7b4f4998bcf7677ca5397a867e850f40232192073974",
          "dweb:/ipfs/QmUHsbVdp9SKmgek7ZfPcLTKrpZFXpqaqt4sVejzxGEQL3"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x04102de0a79398e4bdea57b7a4818655b4cc66d6f81d1cff08bf428cd0b384cd",
        "urls": [
          "bzz-raw://53edc6c8f7f67cafc0129f039637c77d979880f7f1947defea31e8f0c05095bc",
          "dweb:/ipfs/QmUKXJd1vFCkxxrkXNLURdXrx2apoyWQFrFb5UqNkjdHVi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdToml.sol": {
        "keccak256": "0x58a72c765ed3f7ff6b105509689658795b8a3739b8931772a497155878381861",
        "urls": [
          "bzz-raw://b4a3746f4fabaeb980bd77d9e091d3904ee38a6c0e191bfa8ba6874c6f8558a3",
          "dweb:/ipfs/QmUfFDMEn461FgGEXt5HicyGD54sc28sLaQ9JRWDMBKed8"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0xb2469a902a326074034c4f7081d868113db0edbb7cf48b86528af2d6b07295f8",
        "urls": [
          "bzz-raw://1430a81c4978be875e2a3b31a8bfa4e1438fecd327f23771b690d64db63c020a",
          "dweb:/ipfs/QmW6aB2u1LNaRgGQFwjV7L7UbxsRg63iJ7AuujPouEa4cT"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x3dda6083a83dfa3e8526e97bcc28e862ee2442dd58fe94d5c426d65b8e38f73c",
        "urls": [
          "bzz-raw://33f8c02e4dabdab86a6825125856446a8657eacd712318b51b7818e4a6f6e3f4",
          "dweb:/ipfs/QmRKSjVnrk54yr8wTK2e6QxRjiuba2H8HJSKunHAkdo7RG"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xe2b159412b06b44a7f90972104300c587f308506d37d2143dd7e689e2eac6f01",
        "urls": [
          "bzz-raw://a96e13ac6fec3ffe61a55d6005ef0ef96f47adf3f4f3531e0418f0bf02d3f93c",
          "dweb:/ipfs/QmeFci69gm7a6c6pEqSNoe3HfXPVPiagUc51Pyo5PoS8Rn"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x4bbf47eb762cef93729d6ef15e78789957147039b113e5d4df48e3d3fd16d0f5",
        "urls": [
          "bzz-raw://af9e3a7c3d82fb5b10b57ca4d1a82f2acbef80c077f6f6ef0cc0187c7bfd9f57",
          "dweb:/ipfs/QmR9VzmnBDJpgiDP6CHT6truehukF9HpYvuP6kRiJbDwPP"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f",
        "urls": [
          "bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d",
          "dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbef9786cb49d3eade757bad87568c49c8c8f35721f0193c95ffb055d9e466e11",
        "urls": [
          "bzz-raw://3bafd2b0b2d28068d329f95ea8a1fbce3719c257fcb863fc01abcbafd8d531ab",
          "dweb:/ipfs/QmUeaFjKWTVDBsHVfSob4mwt6A5hTnKDz22HaUXeZhypa3"
        ],
        "license": "MIT"
      },
      "src/HotPotato.sol": {
        "keccak256": "0xc8dd50c4ed50a0fb5f750561dd23588d8b3d75d9cfdfcd46f6527f42f37dbd71",
        "urls": [
          "bzz-raw://d9aeaeed2880ed94a6d0ddfed13f6a218e56788ef70f9ac35b277d578315e91d",
          "dweb:/ipfs/QmWCcxnwC1xiXHzrkhFeCTHgRSZyJnPi1XUUHuLgAHw8se"
        ],
        "license": "MIT"
      },
      "test/HotPotato.Integration.t.sol": {
        "keccak256": "0x92933619497885406094987dfb28cf9de54e052ae73e819d4a5968943fd89661",
        "urls": [
          "bzz-raw://406cf9d1a47623ae84a06300cf3a5a6015fd10500cd711d6e9d56b627b1d74ec",
          "dweb:/ipfs/QmTGp6LaKQ2UvL9J1ySV4g7RMXo4voU1MPWjvr4GGcNHMX"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/HotPotato.Integration.t.sol",
    "id": 41340,
    "exportedSymbols": {
      "HotPotato": [
        40911
      ],
      "HotPotatoIntegrationTest": [
        41339
      ],
      "StdAssertions": [
        2918
      ],
      "StdChains": [
        3880
      ],
      "StdCheats": [
        6765
      ],
      "StdConstants": [
        6806
      ],
      "StdInvariant": [
        7166
      ],
      "StdStorage": [
        8290
      ],
      "StdStyle": [
        11458
      ],
      "StdUtils": [
        13129
      ],
      "Test": [
        13183
      ],
      "TestBase": [
        50
      ],
      "Vm": [
        18278
      ],
      "console": [
        26394
      ],
      "console2": [
        26394
      ],
      "safeconsole": [
        39636
      ],
      "stdError": [
        6872
      ],
      "stdJson": [
        8110
      ],
      "stdMath": [
        8252
      ],
      "stdStorage": [
        10247
      ],
      "stdToml": [
        12402
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3815:20",
    "nodes": [
      {
        "id": 40913,
        "nodeType": "PragmaDirective",
        "src": "32:24:20",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 40914,
        "nodeType": "ImportDirective",
        "src": "58:28:20",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41340,
        "sourceUnit": 13184,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 40917,
        "nodeType": "ImportDirective",
        "src": "87:64:20",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/StdStorage.sol",
        "file": "forge-std/StdStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41340,
        "sourceUnit": 10248,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40915,
              "name": "StdStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 8290,
              "src": "95:10:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 40916,
              "name": "stdStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10247,
              "src": "107:10:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40919,
        "nodeType": "ImportDirective",
        "src": "152:47:20",
        "nodes": [],
        "absolutePath": "src/HotPotato.sol",
        "file": "../src/HotPotato.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41340,
        "sourceUnit": 40912,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40918,
              "name": "HotPotato",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40911,
              "src": "160:9:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 41339,
        "nodeType": "ContractDefinition",
        "src": "201:3643:20",
        "nodes": [
          {
            "id": 40925,
            "nodeType": "UsingForDirective",
            "src": "249:32:20",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 40922,
              "name": "stdStorage",
              "nameLocations": [
                "255:10:20"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10247,
              "src": "255:10:20"
            },
            "typeName": {
              "id": 40924,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40923,
                "name": "StdStorage",
                "nameLocations": [
                  "270:10:20"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 8290,
                "src": "270:10:20"
              },
              "referencedDeclaration": 8290,
              "src": "270:10:20",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_StdStorage_$8290_storage_ptr",
                "typeString": "struct StdStorage"
              }
            }
          },
          {
            "id": 40928,
            "nodeType": "VariableDeclaration",
            "src": "287:23:20",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "game",
            "nameLocation": "306:4:20",
            "scope": 41339,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_HotPotato_$40911",
              "typeString": "contract HotPotato"
            },
            "typeName": {
              "id": 40927,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40926,
                "name": "HotPotato",
                "nameLocations": [
                  "287:9:20"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40911,
                "src": "287:9:20"
              },
              "referencedDeclaration": 40911,
              "src": "287:9:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HotPotato_$40911",
                "typeString": "contract HotPotato"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 40930,
            "nodeType": "VariableDeclaration",
            "src": "316:24:20",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "creator",
            "nameLocation": "333:7:20",
            "scope": 41339,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 40929,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "316:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 40932,
            "nodeType": "VariableDeclaration",
            "src": "346:23:20",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "keeper",
            "nameLocation": "363:6:20",
            "scope": 41339,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 40931,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "346:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 40935,
            "nodeType": "VariableDeclaration",
            "src": "376:46:20",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "BASE_PRICE",
            "nameLocation": "402:10:20",
            "scope": 41339,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40933,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "376:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 40934,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "415:7:20",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "id": 40938,
            "nodeType": "VariableDeclaration",
            "src": "428:42:20",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "MULT_BPS",
            "nameLocation": "454:8:20",
            "scope": 41339,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40936,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "428:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3132303030",
              "id": 40937,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "465:5:20",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_12000_by_1",
                "typeString": "int_const 12000"
              },
              "value": "12000"
            },
            "visibility": "internal"
          },
          {
            "id": 40941,
            "nodeType": "VariableDeclaration",
            "src": "484:43:20",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "PAYOUT_BPS",
            "nameLocation": "510:10:20",
            "scope": 41339,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40939,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "484:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35303030",
              "id": 40940,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "523:4:20",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5000_by_1",
                "typeString": "int_const 5000"
              },
              "value": "5000"
            },
            "visibility": "internal"
          },
          {
            "id": 40944,
            "nodeType": "VariableDeclaration",
            "src": "540:46:20",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "KEEPER_REWARD",
            "nameLocation": "566:13:20",
            "scope": 41339,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40942,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "540:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32653136",
              "id": 40943,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "582:4:20",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_20000000000000000_by_1",
                "typeString": "int_const 20000000000000000"
              },
              "value": "2e16"
            },
            "visibility": "internal"
          },
          {
            "id": 40947,
            "nodeType": "VariableDeclaration",
            "src": "609:44:20",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "CREATOR_FEE",
            "nameLocation": "635:11:20",
            "scope": 41339,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40945,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "609:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653137",
              "id": 40946,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "649:4:20",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000_by_1",
                "typeString": "int_const 100000000000000000"
              },
              "value": "1e17"
            },
            "visibility": "internal"
          },
          {
            "id": 41007,
            "nodeType": "FunctionDefinition",
            "src": "679:354:20",
            "nodes": [],
            "body": {
              "id": 41006,
              "nodeType": "Block",
              "src": "703:330:20",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    40951
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40951,
                      "mutability": "mutable",
                      "name": "deployer",
                      "nameLocation": "721:8:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 41006,
                      "src": "713:16:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 40950,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "713:7:20",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40955,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "6465706c6f796572",
                        "id": 40953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "741:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbe2b933bb7d57444cdba9c71b5ceb79b60dc455ad691d856e6e4025cf542caa",
                          "typeString": "literal_string \"deployer\""
                        },
                        "value": "deployer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_dbe2b933bb7d57444cdba9c71b5ceb79b60dc455ad691d856e6e4025cf542caa",
                          "typeString": "literal_string \"deployer\""
                        }
                      ],
                      "id": 40952,
                      "name": "makeAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5732,
                      "src": "732:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) returns (address)"
                      }
                    },
                    "id": 40954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "732:20:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "713:39:20"
                },
                {
                  "expression": {
                    "id": 40960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40956,
                      "name": "creator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40930,
                      "src": "762:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "63726561746f72",
                          "id": 40958,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "781:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_0d1f301a4d55e328cfe2f78743e489a98cedaf66d744b3ab1bb877ff82930b0b",
                            "typeString": "literal_string \"creator\""
                          },
                          "value": "creator"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_0d1f301a4d55e328cfe2f78743e489a98cedaf66d744b3ab1bb877ff82930b0b",
                            "typeString": "literal_string \"creator\""
                          }
                        ],
                        "id": 40957,
                        "name": "makeAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5732,
                        "src": "772:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (string memory) returns (address)"
                        }
                      },
                      "id": 40959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "772:19:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "762:29:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 40961,
                  "nodeType": "ExpressionStatement",
                  "src": "762:29:20"
                },
                {
                  "expression": {
                    "id": 40966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40962,
                      "name": "keeper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40932,
                      "src": "801:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "6b6565706572",
                          "id": 40964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "819:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_7828e9d3df82e69351d51b8c7a93dbe8a71fecfc70c9ab6c998b4a0105e7f8a7",
                            "typeString": "literal_string \"keeper\""
                          },
                          "value": "keeper"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_7828e9d3df82e69351d51b8c7a93dbe8a71fecfc70c9ab6c998b4a0105e7f8a7",
                            "typeString": "literal_string \"keeper\""
                          }
                        ],
                        "id": 40963,
                        "name": "makeAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5732,
                        "src": "810:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (string memory) returns (address)"
                        }
                      },
                      "id": 40965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "810:18:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "801:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 40967,
                  "nodeType": "ExpressionStatement",
                  "src": "801:27:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40971,
                        "name": "deployer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40951,
                        "src": "846:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 40972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "856:10:20",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 40968,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "838:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18278",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "841:4:20",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17345,
                      "src": "838:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 40973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "838:29:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40974,
                  "nodeType": "ExpressionStatement",
                  "src": "838:29:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40978,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40930,
                        "src": "885:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 40979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "894:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 40975,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "877:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18278",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "880:4:20",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17345,
                      "src": "877:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 40980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "877:19:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40981,
                  "nodeType": "ExpressionStatement",
                  "src": "877:19:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40985,
                        "name": "keeper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40932,
                        "src": "914:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 40986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "922:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 40982,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "906:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18278",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "909:4:20",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17345,
                      "src": "906:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 40987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "906:18:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40988,
                  "nodeType": "ExpressionStatement",
                  "src": "906:18:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40992,
                        "name": "deployer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40951,
                        "src": "944:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 40989,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "935:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18278",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "938:5:20",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17567,
                      "src": "935:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 40993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "935:18:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40994,
                  "nodeType": "ExpressionStatement",
                  "src": "935:18:20"
                },
                {
                  "expression": {
                    "id": 41004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40995,
                      "name": "game",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40928,
                      "src": "963:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_HotPotato_$40911",
                        "typeString": "contract HotPotato"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 40999,
                          "name": "BASE_PRICE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40935,
                          "src": "984:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 41000,
                          "name": "MULT_BPS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40938,
                          "src": "996:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 41001,
                          "name": "PAYOUT_BPS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40941,
                          "src": "1006:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 41002,
                          "name": "creator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40930,
                          "src": "1018:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 40998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "970:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_contract$_HotPotato_$40911_$",
                          "typeString": "function (uint256,uint256,uint256,address) returns (contract HotPotato)"
                        },
                        "typeName": {
                          "id": 40997,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 40996,
                            "name": "HotPotato",
                            "nameLocations": [
                              "974:9:20"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 40911,
                            "src": "974:9:20"
                          },
                          "referencedDeclaration": 40911,
                          "src": "974:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_HotPotato_$40911",
                            "typeString": "contract HotPotato"
                          }
                        }
                      },
                      "id": 41003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "970:56:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_HotPotato_$40911",
                        "typeString": "contract HotPotato"
                      }
                    },
                    "src": "963:63:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_HotPotato_$40911",
                      "typeString": "contract HotPotato"
                    }
                  },
                  "id": 41005,
                  "nodeType": "ExpressionStatement",
                  "src": "963:63:20"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "688:5:20",
            "parameters": {
              "id": 40948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "693:2:20"
            },
            "returnParameters": {
              "id": 40949,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "703:0:20"
            },
            "scope": 41339,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 41046,
            "nodeType": "FunctionDefinition",
            "src": "1039:192:20",
            "nodes": [],
            "body": {
              "id": 41045,
              "nodeType": "Block",
              "src": "1073:158:20",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    41011
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41011,
                      "mutability": "mutable",
                      "name": "slot",
                      "nameLocation": "1091:4:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 41045,
                      "src": "1083:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41010,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1083:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41024,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "68617350656e64696e672829",
                            "id": 41020,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1133:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5236434c55bb972a6e0fa3993ad6130240fd04cd7fb7d5cfa514d14f95b75ebe",
                              "typeString": "literal_string \"hasPending()\""
                            },
                            "value": "hasPending()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5236434c55bb972a6e0fa3993ad6130240fd04cd7fb7d5cfa514d14f95b75ebe",
                              "typeString": "literal_string \"hasPending()\""
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 41016,
                                    "name": "game",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 40928,
                                    "src": "1122:4:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_HotPotato_$40911",
                                      "typeString": "contract HotPotato"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_HotPotato_$40911",
                                      "typeString": "contract HotPotato"
                                    }
                                  ],
                                  "id": 41015,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1114:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 41014,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1114:7:20",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 41017,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1114:13:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 41012,
                                "name": "stdstore",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46,
                                "src": "1098:8:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StdStorage_$8290_storage",
                                  "typeString": "struct StdStorage storage ref"
                                }
                              },
                              "id": 41013,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1107:6:20",
                              "memberName": "target",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9722,
                              "src": "1098:15:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$8290_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$8290_storage_ptr_$attached_to$_t_struct$_StdStorage_$8290_storage_ptr_$",
                                "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                              }
                            },
                            "id": 41018,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1098:30:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StdStorage_$8290_storage_ptr",
                              "typeString": "struct StdStorage storage pointer"
                            }
                          },
                          "id": 41019,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1129:3:20",
                          "memberName": "sig",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9758,
                          "src": "1098:34:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$8290_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$8290_storage_ptr_$attached_to$_t_struct$_StdStorage_$8290_storage_ptr_$",
                            "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                          }
                        },
                        "id": 41021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1098:50:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StdStorage_$8290_storage_ptr",
                          "typeString": "struct StdStorage storage pointer"
                        }
                      },
                      "id": 41022,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1149:4:20",
                      "memberName": "find",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9686,
                      "src": "1098:55:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$8290_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_StdStorage_$8290_storage_ptr_$",
                        "typeString": "function (struct StdStorage storage pointer) returns (uint256)"
                      }
                    },
                    "id": 41023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1098:57:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1083:72:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41030,
                            "name": "game",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40928,
                            "src": "1182:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HotPotato_$40911",
                              "typeString": "contract HotPotato"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HotPotato_$40911",
                              "typeString": "contract HotPotato"
                            }
                          ],
                          "id": 41029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1174:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 41028,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1174:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1174:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 41034,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41011,
                            "src": "1197:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 41033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1189:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 41032,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1189:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1189:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 41040,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1220:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 41039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1212:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 41038,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1212:7:20",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 41041,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1212:10:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 41037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1204:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 41036,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1204:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1204:19:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 41025,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "1165:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18278",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 41027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1168:5:20",
                      "memberName": "store",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17841,
                      "src": "1165:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,bytes32,bytes32) external"
                      }
                    },
                    "id": 41043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1165:59:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41044,
                  "nodeType": "ExpressionStatement",
                  "src": "1165:59:20"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_clearPending",
            "nameLocation": "1048:13:20",
            "parameters": {
              "id": 41008,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1061:2:20"
            },
            "returnParameters": {
              "id": 41009,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1073:0:20"
            },
            "scope": 41339,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 41338,
            "nodeType": "FunctionDefinition",
            "src": "1343:2499:20",
            "nodes": [],
            "body": {
              "id": 41337,
              "nodeType": "Block",
              "src": "1400:2442:20",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    41051
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41051,
                      "mutability": "mutable",
                      "name": "roundId",
                      "nameLocation": "1418:7:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 41337,
                      "src": "1410:15:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41050,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1410:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41055,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 41052,
                        "name": "game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40928,
                        "src": "1428:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HotPotato_$40911",
                          "typeString": "contract HotPotato"
                        }
                      },
                      "id": 41053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1433:14:20",
                      "memberName": "currentRoundId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39774,
                      "src": "1428:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 41054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1428:21:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1410:39:20"
                },
                {
                  "assignments": [
                    41060
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41060,
                      "mutability": "mutable",
                      "name": "participants",
                      "nameLocation": "1516:12:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 41337,
                      "src": "1499:29:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 41058,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1499:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 41059,
                        "nodeType": "ArrayTypeName",
                        "src": "1499:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41066,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "3530",
                        "id": 41064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1545:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        },
                        "value": "50"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        }
                      ],
                      "id": 41063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1531:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 41061,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1535:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 41062,
                        "nodeType": "ArrayTypeName",
                        "src": "1535:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 41065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1531:17:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1499:49:20"
                },
                {
                  "body": {
                    "id": 41119,
                    "nodeType": "Block",
                    "src": "1591:264:20",
                    "statements": [
                      {
                        "assignments": [
                          41078
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 41078,
                            "mutability": "mutable",
                            "name": "player",
                            "nameLocation": "1613:6:20",
                            "nodeType": "VariableDeclaration",
                            "scope": 41119,
                            "src": "1605:14:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 41077,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1605:7:20",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 41089,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "70",
                                      "id": 41084,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1655:3:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_2304e88f144ae9318c71b0fb9e0f44bd9e0c6c58fb1b5315a35fd8b4b2a444ab",
                                        "typeString": "literal_string \"p\""
                                      },
                                      "value": "p"
                                    },
                                    {
                                      "id": 41085,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41068,
                                      "src": "1660:1:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_2304e88f144ae9318c71b0fb9e0f44bd9e0c6c58fb1b5315a35fd8b4b2a444ab",
                                        "typeString": "literal_string \"p\""
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 41082,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "1638:3:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 41083,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "1642:12:20",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "1638:16:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 41086,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1638:24:20",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 41081,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1631:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                  "typeString": "type(string storage pointer)"
                                },
                                "typeName": {
                                  "id": 41080,
                                  "name": "string",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1631:6:20",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 41087,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1631:32:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 41079,
                            "name": "makeAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5732,
                            "src": "1622:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory) returns (address)"
                            }
                          },
                          "id": 41088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1622:42:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1605:59:20"
                      },
                      {
                        "expression": {
                          "id": 41094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 41090,
                              "name": "participants",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41060,
                              "src": "1678:12:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 41092,
                            "indexExpression": {
                              "id": 41091,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41068,
                              "src": "1691:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1678:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 41093,
                            "name": "player",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41078,
                            "src": "1696:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1678:24:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 41095,
                        "nodeType": "ExpressionStatement",
                        "src": "1678:24:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 41099,
                              "name": "player",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41078,
                              "src": "1724:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "3130",
                              "id": 41100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1732:8:20",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                "typeString": "int_const 10000000000000000000"
                              },
                              "value": "10"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                "typeString": "int_const 10000000000000000000"
                              }
                            ],
                            "expression": {
                              "id": 41096,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43,
                              "src": "1716:2:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$18278",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 41098,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1719:4:20",
                            "memberName": "deal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17345,
                            "src": "1716:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 41101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1716:25:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 41102,
                        "nodeType": "ExpressionStatement",
                        "src": "1716:25:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 41106,
                              "name": "player",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41078,
                              "src": "1764:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 41103,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43,
                              "src": "1755:2:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$18278",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 41105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1758:5:20",
                            "memberName": "prank",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17567,
                            "src": "1755:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 41107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1755:16:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 41108,
                        "nodeType": "ExpressionStatement",
                        "src": "1755:16:20"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 41109,
                                "name": "game",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40928,
                                "src": "1785:4:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_HotPotato_$40911",
                                  "typeString": "contract HotPotato"
                                }
                              },
                              "id": 41111,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1790:4:20",
                              "memberName": "take",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40042,
                              "src": "1785:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 41113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 41112,
                                "name": "BASE_PRICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40935,
                                "src": "1802:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "1785:28:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 41114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1785:30:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 41115,
                        "nodeType": "ExpressionStatement",
                        "src": "1785:30:20"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 41116,
                            "name": "_clearPending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41046,
                            "src": "1829:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 41117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1829:15:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 41118,
                        "nodeType": "ExpressionStatement",
                        "src": "1829:15:20"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41071,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41068,
                      "src": "1578:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3439",
                      "id": 41072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1582:2:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_49_by_1",
                        "typeString": "int_const 49"
                      },
                      "value": "49"
                    },
                    "src": "1578:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41120,
                  "initializationExpression": {
                    "assignments": [
                      41068
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 41068,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1571:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 41120,
                        "src": "1563:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 41067,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1563:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 41070,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 41069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1575:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1563:13:20"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 41075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1586:3:20",
                      "subExpression": {
                        "id": 41074,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41068,
                        "src": "1586:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 41076,
                    "nodeType": "ExpressionStatement",
                    "src": "1586:3:20"
                  },
                  "nodeType": "ForStatement",
                  "src": "1558:297:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 41122,
                            "name": "game",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40928,
                            "src": "1926:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HotPotato_$40911",
                              "typeString": "contract HotPotato"
                            }
                          },
                          "id": 41123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1931:12:20",
                          "memberName": "availablePot",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40645,
                          "src": "1926:17:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 41124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1926:19:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3439",
                        "id": 41125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1947:8:20",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_49000000000000000000_by_1",
                          "typeString": "int_const 49000000000000000000"
                        },
                        "value": "49"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_49000000000000000000_by_1",
                          "typeString": "int_const 49000000000000000000"
                        }
                      ],
                      "id": 41121,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        364,
                        387,
                        407,
                        430,
                        489,
                        512,
                        571,
                        594,
                        614,
                        637,
                        695,
                        713,
                        728,
                        746,
                        763,
                        783,
                        800,
                        820,
                        837,
                        857,
                        874,
                        894,
                        911,
                        931,
                        948,
                        968,
                        985,
                        1005
                      ],
                      "referencedDeclaration": 407,
                      "src": "1917:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 41126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1917:39:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41127,
                  "nodeType": "ExpressionStatement",
                  "src": "1917:39:20"
                },
                {
                  "assignments": [
                    41129
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41129,
                      "mutability": "mutable",
                      "name": "p50",
                      "nameLocation": "2018:3:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 41337,
                      "src": "2010:11:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 41128,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2010:7:20",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41133,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "703439",
                        "id": 41131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2033:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4235eed08d5438aa402af3f319657a8386f069aa6a4920310e1f637ae35bf95",
                          "typeString": "literal_string \"p49\""
                        },
                        "value": "p49"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a4235eed08d5438aa402af3f319657a8386f069aa6a4920310e1f637ae35bf95",
                          "typeString": "literal_string \"p49\""
                        }
                      ],
                      "id": 41130,
                      "name": "makeAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5732,
                      "src": "2024:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) returns (address)"
                      }
                    },
                    "id": 41132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2024:15:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2010:29:20"
                },
                {
                  "expression": {
                    "id": 41138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 41134,
                        "name": "participants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41060,
                        "src": "2049:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 41136,
                      "indexExpression": {
                        "hexValue": "3439",
                        "id": 41135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2062:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_49_by_1",
                          "typeString": "int_const 49"
                        },
                        "value": "49"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2049:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 41137,
                      "name": "p50",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41129,
                      "src": "2068:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2049:22:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 41139,
                  "nodeType": "ExpressionStatement",
                  "src": "2049:22:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41143,
                        "name": "p50",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41129,
                        "src": "2089:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 41144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2094:8:20",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 41140,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "2081:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18278",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 41142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2084:4:20",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17345,
                      "src": "2081:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 41145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2081:22:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41146,
                  "nodeType": "ExpressionStatement",
                  "src": "2081:22:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41150,
                        "name": "p50",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41129,
                        "src": "2122:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 41147,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "2113:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18278",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 41149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2116:5:20",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17567,
                      "src": "2113:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 41151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2113:13:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41152,
                  "nodeType": "ExpressionStatement",
                  "src": "2113:13:20"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 41153,
                          "name": "game",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40928,
                          "src": "2136:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_HotPotato_$40911",
                            "typeString": "contract HotPotato"
                          }
                        },
                        "id": 41155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2141:4:20",
                        "memberName": "take",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40042,
                        "src": "2136:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 41157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "30",
                          "id": 41156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2153:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "src": "2136:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 41158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2136:21:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41159,
                  "nodeType": "ExpressionStatement",
                  "src": "2136:21:20"
                },
                {
                  "assignments": [
                    41161
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41161,
                      "mutability": "mutable",
                      "name": "creatorBalBefore",
                      "nameLocation": "2221:16:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 41337,
                      "src": "2213:24:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41160,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2213:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41164,
                  "initialValue": {
                    "expression": {
                      "id": 41162,
                      "name": "creator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40930,
                      "src": "2240:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 41163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2248:7:20",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "2240:15:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2213:42:20"
                },
                {
                  "assignments": [
                    41170
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41170,
                      "mutability": "mutable",
                      "name": "balancesBefore",
                      "nameLocation": "2284:14:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 41337,
                      "src": "2265:33:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$50_memory_ptr",
                        "typeString": "uint256[50]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 41168,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2265:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 41169,
                        "length": {
                          "hexValue": "3530",
                          "id": 41167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2273:2:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "2265:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                          "typeString": "uint256[50]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41171,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2265:33:20"
                },
                {
                  "body": {
                    "id": 41191,
                    "nodeType": "Block",
                    "src": "2341:68:20",
                    "statements": [
                      {
                        "expression": {
                          "id": 41189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 41182,
                              "name": "balancesBefore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41170,
                              "src": "2355:14:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$50_memory_ptr",
                                "typeString": "uint256[50] memory"
                              }
                            },
                            "id": 41184,
                            "indexExpression": {
                              "id": 41183,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41173,
                              "src": "2370:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2355:17:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 41185,
                                "name": "participants",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41060,
                                "src": "2375:12:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 41187,
                              "indexExpression": {
                                "id": 41186,
                                "name": "j",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41173,
                                "src": "2388:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2375:15:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 41188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2391:7:20",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "2375:23:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2355:43:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 41190,
                        "nodeType": "ExpressionStatement",
                        "src": "2355:43:20"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41176,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41173,
                      "src": "2328:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3530",
                      "id": 41177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2332:2:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "src": "2328:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41192,
                  "initializationExpression": {
                    "assignments": [
                      41173
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 41173,
                        "mutability": "mutable",
                        "name": "j",
                        "nameLocation": "2321:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 41192,
                        "src": "2313:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 41172,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2313:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 41175,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 41174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2325:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2313:13:20"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 41180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2336:3:20",
                      "subExpression": {
                        "id": 41179,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41173,
                        "src": "2336:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 41181,
                    "nodeType": "ExpressionStatement",
                    "src": "2336:3:20"
                  },
                  "nodeType": "ForStatement",
                  "src": "2308:101:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 41199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 41196,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2476:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 41197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2482:6:20",
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "2476:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 41198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2491:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "2476:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 41193,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "2468:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18278",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 41195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2471:4:20",
                      "memberName": "roll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17657,
                      "src": "2468:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 41200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2468:25:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41201,
                  "nodeType": "ExpressionStatement",
                  "src": "2468:25:20"
                },
                {
                  "assignments": [
                    41203
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41203,
                      "mutability": "mutable",
                      "name": "keeperBalBefore",
                      "nameLocation": "2511:15:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 41337,
                      "src": "2503:23:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41202,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2503:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41206,
                  "initialValue": {
                    "expression": {
                      "id": 41204,
                      "name": "keeper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40932,
                      "src": "2529:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 41205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2536:7:20",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "2529:14:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2503:40:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41210,
                        "name": "keeper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40932,
                        "src": "2562:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 41207,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "2553:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18278",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 41209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2556:5:20",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17567,
                      "src": "2553:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 41211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2553:16:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41212,
                  "nodeType": "ExpressionStatement",
                  "src": "2553:16:20"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 41213,
                        "name": "game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40928,
                        "src": "2579:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HotPotato_$40911",
                          "typeString": "contract HotPotato"
                        }
                      },
                      "id": 41215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2584:6:20",
                      "memberName": "settle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40213,
                      "src": "2579:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 41216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2579:13:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41217,
                  "nodeType": "ExpressionStatement",
                  "src": "2579:13:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 41222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 41219,
                            "name": "keeper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40932,
                            "src": "2645:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 41220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2652:7:20",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "2645:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 41221,
                          "name": "keeperBalBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41203,
                          "src": "2662:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2645:32:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 41223,
                        "name": "KEEPER_REWARD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40944,
                        "src": "2679:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 41218,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        364,
                        387,
                        407,
                        430,
                        489,
                        512,
                        571,
                        594,
                        614,
                        637,
                        695,
                        713,
                        728,
                        746,
                        763,
                        783,
                        800,
                        820,
                        837,
                        857,
                        874,
                        894,
                        911,
                        931,
                        948,
                        968,
                        985,
                        1005
                      ],
                      "referencedDeclaration": 407,
                      "src": "2636:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 41224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2636:57:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41225,
                  "nodeType": "ExpressionStatement",
                  "src": "2636:57:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 41227,
                            "name": "game",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40928,
                            "src": "2761:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HotPotato_$40911",
                              "typeString": "contract HotPotato"
                            }
                          },
                          "id": 41228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2766:14:20",
                          "memberName": "currentRoundId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39774,
                          "src": "2761:19:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 41229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2761:21:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 41232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 41230,
                          "name": "roundId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41051,
                          "src": "2784:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 41231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2794:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2784:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 41226,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        364,
                        387,
                        407,
                        430,
                        489,
                        512,
                        571,
                        594,
                        614,
                        637,
                        695,
                        713,
                        728,
                        746,
                        763,
                        783,
                        800,
                        820,
                        837,
                        857,
                        874,
                        894,
                        911,
                        931,
                        948,
                        968,
                        985,
                        1005
                      ],
                      "referencedDeclaration": 407,
                      "src": "2752:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 41233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2752:44:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41234,
                  "nodeType": "ExpressionStatement",
                  "src": "2752:44:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 41236,
                            "name": "game",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40928,
                            "src": "2815:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HotPotato_$40911",
                              "typeString": "contract HotPotato"
                            }
                          },
                          "id": 41237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2820:20:20",
                          "memberName": "currentEntryPriceWei",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39770,
                          "src": "2815:25:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 41238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2815:27:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 41239,
                            "name": "game",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40928,
                            "src": "2844:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HotPotato_$40911",
                              "typeString": "contract HotPotato"
                            }
                          },
                          "id": 41240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2849:17:20",
                          "memberName": "baseEntryPriceWei",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39764,
                          "src": "2844:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 41241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2844:24:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 41235,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        364,
                        387,
                        407,
                        430,
                        489,
                        512,
                        571,
                        594,
                        614,
                        637,
                        695,
                        713,
                        728,
                        746,
                        763,
                        783,
                        800,
                        820,
                        837,
                        857,
                        874,
                        894,
                        911,
                        931,
                        948,
                        968,
                        985,
                        1005
                      ],
                      "referencedDeclaration": 407,
                      "src": "2806:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 41242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2806:63:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41243,
                  "nodeType": "ExpressionStatement",
                  "src": "2806:63:20"
                },
                {
                  "assignments": [
                    41245
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41245,
                      "mutability": "mutable",
                      "name": "potAfterKeeper",
                      "nameLocation": "2980:14:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 41337,
                      "src": "2972:22:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41244,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2972:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41255,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 41248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3439",
                        "id": 41246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2997:8:20",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_49000000000000000000_by_1",
                          "typeString": "int_const 49000000000000000000"
                        },
                        "value": "49"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 41247,
                        "name": "KEEPER_REWARD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40944,
                        "src": "3008:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2997:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 41253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3053:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 41254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2997:57:20",
                    "trueExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 41251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3439",
                            "id": 41249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3025:8:20",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_49000000000000000000_by_1",
                              "typeString": "int_const 49000000000000000000"
                            },
                            "value": "49"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 41250,
                            "name": "KEEPER_REWARD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40944,
                            "src": "3036:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3025:24:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 41252,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3024:26:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2972:82:20"
                },
                {
                  "assignments": [
                    41257
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41257,
                      "mutability": "mutable",
                      "name": "creatorPay",
                      "nameLocation": "3072:10:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 41337,
                      "src": "3064:18:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41256,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3064:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41270,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 41260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 41258,
                        "name": "potAfterKeeper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41245,
                        "src": "3085:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 41259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3102:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3085:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 41268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3171:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 41269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3085:87:20",
                    "trueExpression": {
                      "components": [
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 41263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 41261,
                              "name": "CREATOR_FEE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40947,
                              "src": "3107:11:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "id": 41262,
                              "name": "potAfterKeeper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41245,
                              "src": "3122:14:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3107:29:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 41265,
                            "name": "potAfterKeeper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41245,
                            "src": "3153:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 41266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "3107:60:20",
                          "trueExpression": {
                            "id": 41264,
                            "name": "CREATOR_FEE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40947,
                            "src": "3139:11:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 41267,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3106:62:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3064:108:20"
                },
                {
                  "assignments": [
                    41272
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41272,
                      "mutability": "mutable",
                      "name": "potAfterCreator",
                      "nameLocation": "3190:15:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 41337,
                      "src": "3182:23:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41271,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3182:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41276,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41273,
                      "name": "potAfterKeeper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41245,
                      "src": "3208:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 41274,
                      "name": "creatorPay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41257,
                      "src": "3225:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3208:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3182:53:20"
                },
                {
                  "assignments": [
                    41278
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41278,
                      "mutability": "mutable",
                      "name": "payoutPool",
                      "nameLocation": "3253:10:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 41337,
                      "src": "3245:18:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41277,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3245:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41285,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 41281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 41279,
                            "name": "potAfterCreator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41272,
                            "src": "3267:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 41280,
                            "name": "PAYOUT_BPS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40941,
                            "src": "3285:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3267:28:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 41282,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3266:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3130303030",
                      "id": 41283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3299:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "3266:38:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3245:59:20"
                },
                {
                  "assignments": [
                    41287
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41287,
                      "mutability": "mutable",
                      "name": "perShare",
                      "nameLocation": "3329:8:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 41337,
                      "src": "3321:16:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41286,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3321:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41291,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41288,
                      "name": "payoutPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41278,
                      "src": "3340:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3530",
                      "id": 41289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3353:2:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "src": "3340:15:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3321:34:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 41296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 41293,
                            "name": "creator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40930,
                            "src": "3409:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 41294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3417:7:20",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "3409:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 41295,
                          "name": "creatorBalBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41161,
                          "src": "3427:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3409:34:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 41297,
                        "name": "creatorPay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41257,
                        "src": "3445:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 41292,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        364,
                        387,
                        407,
                        430,
                        489,
                        512,
                        571,
                        594,
                        614,
                        637,
                        695,
                        713,
                        728,
                        746,
                        763,
                        783,
                        800,
                        820,
                        837,
                        857,
                        874,
                        894,
                        911,
                        931,
                        948,
                        968,
                        985,
                        1005
                      ],
                      "referencedDeclaration": 407,
                      "src": "3400:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 41298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3400:56:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41299,
                  "nodeType": "ExpressionStatement",
                  "src": "3400:56:20"
                },
                {
                  "body": {
                    "id": 41322,
                    "nodeType": "Block",
                    "src": "3561:90:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 41318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 41311,
                                    "name": "participants",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 41060,
                                    "src": "3584:12:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 41313,
                                  "indexExpression": {
                                    "id": 41312,
                                    "name": "j2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 41301,
                                    "src": "3597:2:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3584:16:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 41314,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3601:7:20",
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "src": "3584:24:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 41315,
                                  "name": "balancesBefore",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41170,
                                  "src": "3611:14:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$50_memory_ptr",
                                    "typeString": "uint256[50] memory"
                                  }
                                },
                                "id": 41317,
                                "indexExpression": {
                                  "id": 41316,
                                  "name": "j2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41301,
                                  "src": "3626:2:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3611:18:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3584:45:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 41319,
                              "name": "perShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41287,
                              "src": "3631:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 41310,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              364,
                              387,
                              407,
                              430,
                              489,
                              512,
                              571,
                              594,
                              614,
                              637,
                              695,
                              713,
                              728,
                              746,
                              763,
                              783,
                              800,
                              820,
                              837,
                              857,
                              874,
                              894,
                              911,
                              931,
                              948,
                              968,
                              985,
                              1005
                            ],
                            "referencedDeclaration": 407,
                            "src": "3575:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) pure"
                            }
                          },
                          "id": 41320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3575:65:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 41321,
                        "nodeType": "ExpressionStatement",
                        "src": "3575:65:20"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41304,
                      "name": "j2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41301,
                      "src": "3546:2:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3530",
                      "id": 41305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3551:2:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "src": "3546:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41323,
                  "initializationExpression": {
                    "assignments": [
                      41301
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 41301,
                        "mutability": "mutable",
                        "name": "j2",
                        "nameLocation": "3538:2:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 41323,
                        "src": "3530:10:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 41300,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3530:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 41303,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 41302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3543:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3530:14:20"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 41308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3555:4:20",
                      "subExpression": {
                        "id": 41307,
                        "name": "j2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41301,
                        "src": "3555:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 41309,
                    "nodeType": "ExpressionStatement",
                    "src": "3555:4:20"
                  },
                  "nodeType": "ForStatement",
                  "src": "3525:126:20"
                },
                {
                  "assignments": [
                    41325
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41325,
                      "mutability": "mutable",
                      "name": "expectedRemaining",
                      "nameLocation": "3729:17:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 41337,
                      "src": "3721:25:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41324,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3721:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41329,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41326,
                      "name": "potAfterCreator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41272,
                      "src": "3749:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 41327,
                      "name": "payoutPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41278,
                      "src": "3767:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3749:28:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3721:56:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 41331,
                            "name": "game",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40928,
                            "src": "3796:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HotPotato_$40911",
                              "typeString": "contract HotPotato"
                            }
                          },
                          "id": 41332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3801:12:20",
                          "memberName": "availablePot",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40645,
                          "src": "3796:17:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 41333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3796:19:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 41334,
                        "name": "expectedRemaining",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41325,
                        "src": "3817:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 41330,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        364,
                        387,
                        407,
                        430,
                        489,
                        512,
                        571,
                        594,
                        614,
                        637,
                        695,
                        713,
                        728,
                        746,
                        763,
                        783,
                        800,
                        820,
                        837,
                        857,
                        874,
                        894,
                        911,
                        931,
                        948,
                        968,
                        985,
                        1005
                      ],
                      "referencedDeclaration": 407,
                      "src": "3787:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 41335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3787:48:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41336,
                  "nodeType": "ExpressionStatement",
                  "src": "3787:48:20"
                }
              ]
            },
            "documentation": {
              "id": 41047,
              "nodeType": "StructuredDocumentation",
              "src": "1237:101:20",
              "text": "@notice End-to-end full round: 49 paid entries + 50th free triggers forced loss and distributions"
            },
            "functionSelector": "d095712e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFullRoundForcedLossAndDistribution",
            "nameLocation": "1352:38:20",
            "parameters": {
              "id": 41048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1390:2:20"
            },
            "returnParameters": {
              "id": 41049,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1400:0:20"
            },
            "scope": 41339,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 40920,
              "name": "Test",
              "nameLocations": [
                "238:4:20"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13183,
              "src": "238:4:20"
            },
            "id": 40921,
            "nodeType": "InheritanceSpecifier",
            "src": "238:4:20"
          }
        ],
        "canonicalName": "HotPotatoIntegrationTest",
        "contractDependencies": [
          40911
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          41339,
          13183,
          13129,
          7166,
          6765,
          5970,
          3880,
          2918,
          50,
          47
        ],
        "name": "HotPotatoIntegrationTest",
        "nameLocation": "210:24:20",
        "scope": 41340,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 20
}